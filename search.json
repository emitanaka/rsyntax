[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "R Syntax Comparisons",
    "section": "",
    "text": "Data wrangling"
  },
  {
    "objectID": "data-wrangling/index.html",
    "href": "data-wrangling/index.html",
    "title": "Data wrangling",
    "section": "",
    "text": "Comparisons\n\n\n\n\n\n\nBase R vs. tidyverse (with data.table)\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "data-wrangling/base-vs-tidyverse/index.html",
    "href": "data-wrangling/base-vs-tidyverse/index.html",
    "title": "Base R and Tidyverse syntax comparison for data wrangling",
    "section": "",
    "text": "Tidyverse is a popular collection of R packages that provides a consistent interface for data science tasks, including data wrangling for tabular data, strings, factors, date and time, and lists (Wickham et al. 2019). This live document provides a comparison between Base R and tidyverse syntax for data wrangling. Note that this document includes many of the data wrangling tasks but not all and will be continously updated. The Base R approach is shown on the left and the Tidyverse approach is shown on the right.\nFor the following comparisons, each code cell is excecuted independently so the previous code cell do not affect the code cell thereafter1.\n\nlibrary(tidyverse)\nOutput\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors"
  },
  {
    "objectID": "data-wrangling/base-vs-tidyverse/index.html#selecting-a-single-column-as-a-vector",
    "href": "data-wrangling/base-vs-tidyverse/index.html#selecting-a-single-column-as-a-vector",
    "title": "Base R and Tidyverse syntax comparison for data wrangling",
    "section": "2.1 Selecting a single column as a vector",
    "text": "2.1 Selecting a single column as a vector\nExtract the sex column as a vector.\n\n\n\ndf$sex\nOutput\n\n [1] male   female female female female female female female female female\nLevels: female male\n\n\ndf[[\"sex\"]]\nOutput\n\n [1] male   female female female female female female female female female\nLevels: female male\n\n\ndf[, \"sex\", drop = TRUE]\nOutput\n\n [1] male   female female female female female female female female female\nLevels: female male\n\n\n\n\n\npull(tbl, sex)\nOutput\n\n [1] male   female female female female female female female female female\nLevels: female male\n\n\n\n\n\n\n\n\ndt[, .(sex)]\nOutput\n\n       sex\n    &lt;fctr&gt;\n 1:   male\n 2: female\n 3: female\n 4: female\n 5: female\n 6: female\n 7: female\n 8: female\n 9: female\n10: female"
  },
  {
    "objectID": "data-wrangling/base-vs-tidyverse/index.html#selecting-columns",
    "href": "data-wrangling/base-vs-tidyverse/index.html#selecting-columns",
    "title": "Base R and Tidyverse syntax comparison for data wrangling",
    "section": "2.2 Selecting columns",
    "text": "2.2 Selecting columns\n\n2.2.1 By column name\nSelect the sex and species columns.\n\n\n\nsubset(df, \n       select = c(sex, species))\nOutput\n\n      sex species\n1    male  Adelie\n2  female  Adelie\n3  female  Adelie\n4  female  Adelie\n5  female  Adelie\n6  female  Adelie\n7  female  Gentoo\n8  female  Gentoo\n9  female  Gentoo\n10 female  Gentoo\n\n\nsubset(df, \n       select = c(\"sex\", \"species\"))\nOutput\n\n      sex species\n1    male  Adelie\n2  female  Adelie\n3  female  Adelie\n4  female  Adelie\n5  female  Adelie\n6  female  Adelie\n7  female  Gentoo\n8  female  Gentoo\n9  female  Gentoo\n10 female  Gentoo\n\n\ndf[c(\"sex\", \"species\")]\nOutput\n\n      sex species\n1    male  Adelie\n2  female  Adelie\n3  female  Adelie\n4  female  Adelie\n5  female  Adelie\n6  female  Adelie\n7  female  Gentoo\n8  female  Gentoo\n9  female  Gentoo\n10 female  Gentoo\n\n\ndf[, c(\"sex\", \"species\")]\nOutput\n\n      sex species\n1    male  Adelie\n2  female  Adelie\n3  female  Adelie\n4  female  Adelie\n5  female  Adelie\n6  female  Adelie\n7  female  Gentoo\n8  female  Gentoo\n9  female  Gentoo\n10 female  Gentoo\n\n\n\n\n\nselect(tbl, sex, species)\nOutput\n\n# A tibble: 10 × 2\n   sex    species\n   &lt;fct&gt;  &lt;fct&gt;  \n 1 male   Adelie \n 2 female Adelie \n 3 female Adelie \n 4 female Adelie \n 5 female Adelie \n 6 female Adelie \n 7 female Gentoo \n 8 female Gentoo \n 9 female Gentoo \n10 female Gentoo \n\n\nselect(tbl, c(sex, species))\nOutput\n\n# A tibble: 10 × 2\n   sex    species\n   &lt;fct&gt;  &lt;fct&gt;  \n 1 male   Adelie \n 2 female Adelie \n 3 female Adelie \n 4 female Adelie \n 5 female Adelie \n 6 female Adelie \n 7 female Gentoo \n 8 female Gentoo \n 9 female Gentoo \n10 female Gentoo \n\n\nselect(tbl, c(\"sex\", \"species\"))\nOutput\n\n# A tibble: 10 × 2\n   sex    species\n   &lt;fct&gt;  &lt;fct&gt;  \n 1 male   Adelie \n 2 female Adelie \n 3 female Adelie \n 4 female Adelie \n 5 female Adelie \n 6 female Adelie \n 7 female Gentoo \n 8 female Gentoo \n 9 female Gentoo \n10 female Gentoo \n\n\n\n\n\n\n\n\ndt[, .(sex, species)]\nOutput\n\n       sex species\n    &lt;fctr&gt;  &lt;fctr&gt;\n 1:   male  Adelie\n 2: female  Adelie\n 3: female  Adelie\n 4: female  Adelie\n 5: female  Adelie\n 6: female  Adelie\n 7: female  Gentoo\n 8: female  Gentoo\n 9: female  Gentoo\n10: female  Gentoo\n\n\n\n\n\n2.2.2 By position\nSelect the first and second columns.\n\n\n\nsubset(df, select = c(1, 2))\nOutput\n\n   species    sex\n1   Adelie   male\n2   Adelie female\n3   Adelie female\n4   Adelie female\n5   Adelie female\n6   Adelie female\n7   Gentoo female\n8   Gentoo female\n9   Gentoo female\n10  Gentoo female\n\n\ndf[c(1, 2)]\nOutput\n\n   species    sex\n1   Adelie   male\n2   Adelie female\n3   Adelie female\n4   Adelie female\n5   Adelie female\n6   Adelie female\n7   Gentoo female\n8   Gentoo female\n9   Gentoo female\n10  Gentoo female\n\n\ndf[, c(1, 2)]\nOutput\n\n   species    sex\n1   Adelie   male\n2   Adelie female\n3   Adelie female\n4   Adelie female\n5   Adelie female\n6   Adelie female\n7   Gentoo female\n8   Gentoo female\n9   Gentoo female\n10  Gentoo female\n\n\n\n\n\nselect(tbl, 1, 2)\nOutput\n\n# A tibble: 10 × 2\n   species sex   \n   &lt;fct&gt;   &lt;fct&gt; \n 1 Adelie  male  \n 2 Adelie  female\n 3 Adelie  female\n 4 Adelie  female\n 5 Adelie  female\n 6 Adelie  female\n 7 Gentoo  female\n 8 Gentoo  female\n 9 Gentoo  female\n10 Gentoo  female\n\n\nselect(tbl, c(1, 2))\nOutput\n\n# A tibble: 10 × 2\n   species sex   \n   &lt;fct&gt;   &lt;fct&gt; \n 1 Adelie  male  \n 2 Adelie  female\n 3 Adelie  female\n 4 Adelie  female\n 5 Adelie  female\n 6 Adelie  female\n 7 Gentoo  female\n 8 Gentoo  female\n 9 Gentoo  female\n10 Gentoo  female\n\n\n\n\n\n\n\n\ndt[, c(1, 2)]\nOutput\n\n    species    sex\n     &lt;fctr&gt; &lt;fctr&gt;\n 1:  Adelie   male\n 2:  Adelie female\n 3:  Adelie female\n 4:  Adelie female\n 5:  Adelie female\n 6:  Adelie female\n 7:  Gentoo female\n 8:  Gentoo female\n 9:  Gentoo female\n10:  Gentoo female\n\n\n\n\n\n2.2.3 By booleans\nSelect columns that are factors.\n\n\n\nsubset(df, select = sapply(df, is.factor))\nOutput\n\n   species    sex\n1   Adelie   male\n2   Adelie female\n3   Adelie female\n4   Adelie female\n5   Adelie female\n6   Adelie female\n7   Gentoo female\n8   Gentoo female\n9   Gentoo female\n10  Gentoo female\n\n\ndf[sapply(df, is.factor)]\nOutput\n\n   species    sex\n1   Adelie   male\n2   Adelie female\n3   Adelie female\n4   Adelie female\n5   Adelie female\n6   Adelie female\n7   Gentoo female\n8   Gentoo female\n9   Gentoo female\n10  Gentoo female\n\n\ndf[, sapply(df, is.factor)]\nOutput\n\n   species    sex\n1   Adelie   male\n2   Adelie female\n3   Adelie female\n4   Adelie female\n5   Adelie female\n6   Adelie female\n7   Gentoo female\n8   Gentoo female\n9   Gentoo female\n10  Gentoo female\n\n\n\n\n\nselect(tbl, where(is.factor))\nOutput\n\n# A tibble: 10 × 2\n   species sex   \n   &lt;fct&gt;   &lt;fct&gt; \n 1 Adelie  male  \n 2 Adelie  female\n 3 Adelie  female\n 4 Adelie  female\n 5 Adelie  female\n 6 Adelie  female\n 7 Gentoo  female\n 8 Gentoo  female\n 9 Gentoo  female\n10 Gentoo  female\n\n\n\n\n\n\n\n\ndt[, sapply(dt, is.factor), with = FALSE]\nOutput\n\n    species    sex\n     &lt;fctr&gt; &lt;fctr&gt;\n 1:  Adelie   male\n 2:  Adelie female\n 3:  Adelie female\n 4:  Adelie female\n 5:  Adelie female\n 6:  Adelie female\n 7:  Gentoo female\n 8:  Gentoo female\n 9:  Gentoo female\n10:  Gentoo female"
  },
  {
    "objectID": "data-wrangling/base-vs-tidyverse/index.html#deleting-one-column",
    "href": "data-wrangling/base-vs-tidyverse/index.html#deleting-one-column",
    "title": "Base R and Tidyverse syntax comparison for data wrangling",
    "section": "2.3 Deleting one column",
    "text": "2.3 Deleting one column\nDelete the sex column.\n\n\n\nsubset(df, select = -sex)\nOutput\n\n   species bill_length_mm bill_depth_mm mass\n1   Adelie           39.1          18.7 3750\n2   Adelie           39.5          16.7 3250\n3   Adelie           35.7          16.9 3150\n4   Adelie           35.7          18.0 3550\n5   Adelie           36.2          17.2 3150\n6   Adelie           36.0          17.1 3700\n7   Gentoo           48.2          14.3 4600\n8   Gentoo           43.2          14.5 4450\n9   Gentoo           47.5          14.0 4875\n10  Gentoo           47.2          13.7 4925\n\n\n\n\ndf$sex &lt;- NULL\ndf\nOutput\n\n   species bill_length_mm bill_depth_mm mass\n1   Adelie           39.1          18.7 3750\n2   Adelie           39.5          16.7 3250\n3   Adelie           35.7          16.9 3150\n4   Adelie           35.7          18.0 3550\n5   Adelie           36.2          17.2 3150\n6   Adelie           36.0          17.1 3700\n7   Gentoo           48.2          14.3 4600\n8   Gentoo           43.2          14.5 4450\n9   Gentoo           47.5          14.0 4875\n10  Gentoo           47.2          13.7 4925\n\n\n\n\n\nselect(tbl, -sex)\nOutput\n\n# A tibble: 10 × 4\n   species bill_length_mm bill_depth_mm  mass\n   &lt;fct&gt;            &lt;dbl&gt;         &lt;dbl&gt; &lt;int&gt;\n 1 Adelie            39.1          18.7  3750\n 2 Adelie            39.5          16.7  3250\n 3 Adelie            35.7          16.9  3150\n 4 Adelie            35.7          18    3550\n 5 Adelie            36.2          17.2  3150\n 6 Adelie            36            17.1  3700\n 7 Gentoo            48.2          14.3  4600\n 8 Gentoo            43.2          14.5  4450\n 9 Gentoo            47.5          14    4875\n10 Gentoo            47.2          13.7  4925\n\n\nmutate(tbl, sex = NULL)\nOutput\n\n# A tibble: 10 × 4\n   species bill_length_mm bill_depth_mm  mass\n   &lt;fct&gt;            &lt;dbl&gt;         &lt;dbl&gt; &lt;int&gt;\n 1 Adelie            39.1          18.7  3750\n 2 Adelie            39.5          16.7  3250\n 3 Adelie            35.7          16.9  3150\n 4 Adelie            35.7          18    3550\n 5 Adelie            36.2          17.2  3150\n 6 Adelie            36            17.1  3700\n 7 Gentoo            48.2          14.3  4600\n 8 Gentoo            43.2          14.5  4450\n 9 Gentoo            47.5          14    4875\n10 Gentoo            47.2          13.7  4925\n\n\n\n\n\n\n\n\ndt[, sex := NULL]\ndt\nOutput\n\n    species bill_length_mm bill_depth_mm  mass\n     &lt;fctr&gt;          &lt;num&gt;         &lt;num&gt; &lt;int&gt;\n 1:  Adelie           39.1          18.7  3750\n 2:  Adelie           39.5          16.7  3250\n 3:  Adelie           35.7          16.9  3150\n 4:  Adelie           35.7          18.0  3550\n 5:  Adelie           36.2          17.2  3150\n 6:  Adelie           36.0          17.1  3700\n 7:  Gentoo           48.2          14.3  4600\n 8:  Gentoo           43.2          14.5  4450\n 9:  Gentoo           47.5          14.0  4875\n10:  Gentoo           47.2          13.7  4925"
  },
  {
    "objectID": "data-wrangling/base-vs-tidyverse/index.html#deleting-multiple-column",
    "href": "data-wrangling/base-vs-tidyverse/index.html#deleting-multiple-column",
    "title": "Base R and Tidyverse syntax comparison for data wrangling",
    "section": "2.4 Deleting multiple column",
    "text": "2.4 Deleting multiple column\nDelete the sex and species columns.\n\n\n\nsubset(df, select = -c(sex, species))\nOutput\n\n   bill_length_mm bill_depth_mm mass\n1            39.1          18.7 3750\n2            39.5          16.7 3250\n3            35.7          16.9 3150\n4            35.7          18.0 3550\n5            36.2          17.2 3150\n6            36.0          17.1 3700\n7            48.2          14.3 4600\n8            43.2          14.5 4450\n9            47.5          14.0 4875\n10           47.2          13.7 4925\n\n\n\n\ndf[c(\"sex\", \"species\")] &lt;- NULL\ndf\nOutput\n\n   bill_length_mm bill_depth_mm mass\n1            39.1          18.7 3750\n2            39.5          16.7 3250\n3            35.7          16.9 3150\n4            35.7          18.0 3550\n5            36.2          17.2 3150\n6            36.0          17.1 3700\n7            48.2          14.3 4600\n8            43.2          14.5 4450\n9            47.5          14.0 4875\n10           47.2          13.7 4925\n\n\n\n\n\nselect(tbl, -c(sex, species))\nOutput\n\n# A tibble: 10 × 3\n   bill_length_mm bill_depth_mm  mass\n            &lt;dbl&gt;         &lt;dbl&gt; &lt;int&gt;\n 1           39.1          18.7  3750\n 2           39.5          16.7  3250\n 3           35.7          16.9  3150\n 4           35.7          18    3550\n 5           36.2          17.2  3150\n 6           36            17.1  3700\n 7           48.2          14.3  4600\n 8           43.2          14.5  4450\n 9           47.5          14    4875\n10           47.2          13.7  4925\n\n\nselect(tbl, !c(sex, species))\nOutput\n\n# A tibble: 10 × 3\n   bill_length_mm bill_depth_mm  mass\n            &lt;dbl&gt;         &lt;dbl&gt; &lt;int&gt;\n 1           39.1          18.7  3750\n 2           39.5          16.7  3250\n 3           35.7          16.9  3150\n 4           35.7          18    3550\n 5           36.2          17.2  3150\n 6           36            17.1  3700\n 7           48.2          14.3  4600\n 8           43.2          14.5  4450\n 9           47.5          14    4875\n10           47.2          13.7  4925\n\n\n\n\n\n\n\n\ndt[, !c(\"sex\", \"species\")]\nOutput\n\n    bill_length_mm bill_depth_mm  mass\n             &lt;num&gt;         &lt;num&gt; &lt;int&gt;\n 1:           39.1          18.7  3750\n 2:           39.5          16.7  3250\n 3:           35.7          16.9  3150\n 4:           35.7          18.0  3550\n 5:           36.2          17.2  3150\n 6:           36.0          17.1  3700\n 7:           48.2          14.3  4600\n 8:           43.2          14.5  4450\n 9:           47.5          14.0  4875\n10:           47.2          13.7  4925"
  },
  {
    "objectID": "data-wrangling/base-vs-tidyverse/index.html#arrange-columns",
    "href": "data-wrangling/base-vs-tidyverse/index.html#arrange-columns",
    "title": "Base R and Tidyverse syntax comparison for data wrangling",
    "section": "2.5 Arrange columns",
    "text": "2.5 Arrange columns\nOrder the columns such that sex is the first column.\n\n\n\ncols &lt;- colnames(df)\nnew_order &lt;- c(\"sex\", setdiff(cols, \"sex\"))\n\n\nsubset(df, select = new_order)\nOutput\n\n      sex species bill_length_mm bill_depth_mm mass\n1    male  Adelie           39.1          18.7 3750\n2  female  Adelie           39.5          16.7 3250\n3  female  Adelie           35.7          16.9 3150\n4  female  Adelie           35.7          18.0 3550\n5  female  Adelie           36.2          17.2 3150\n6  female  Adelie           36.0          17.1 3700\n7  female  Gentoo           48.2          14.3 4600\n8  female  Gentoo           43.2          14.5 4450\n9  female  Gentoo           47.5          14.0 4875\n10 female  Gentoo           47.2          13.7 4925\n\n\ndf[new_order]\nOutput\n\n      sex species bill_length_mm bill_depth_mm mass\n1    male  Adelie           39.1          18.7 3750\n2  female  Adelie           39.5          16.7 3250\n3  female  Adelie           35.7          16.9 3150\n4  female  Adelie           35.7          18.0 3550\n5  female  Adelie           36.2          17.2 3150\n6  female  Adelie           36.0          17.1 3700\n7  female  Gentoo           48.2          14.3 4600\n8  female  Gentoo           43.2          14.5 4450\n9  female  Gentoo           47.5          14.0 4875\n10 female  Gentoo           47.2          13.7 4925\n\n\ndf[, new_order]\nOutput\n\n      sex species bill_length_mm bill_depth_mm mass\n1    male  Adelie           39.1          18.7 3750\n2  female  Adelie           39.5          16.7 3250\n3  female  Adelie           35.7          16.9 3150\n4  female  Adelie           35.7          18.0 3550\n5  female  Adelie           36.2          17.2 3150\n6  female  Adelie           36.0          17.1 3700\n7  female  Gentoo           48.2          14.3 4600\n8  female  Gentoo           43.2          14.5 4450\n9  female  Gentoo           47.5          14.0 4875\n10 female  Gentoo           47.2          13.7 4925\n\n\n\n\n\nselect(tbl, sex, everything())\nOutput\n\n# A tibble: 10 × 5\n   sex    species bill_length_mm bill_depth_mm  mass\n   &lt;fct&gt;  &lt;fct&gt;            &lt;dbl&gt;         &lt;dbl&gt; &lt;int&gt;\n 1 male   Adelie            39.1          18.7  3750\n 2 female Adelie            39.5          16.7  3250\n 3 female Adelie            35.7          16.9  3150\n 4 female Adelie            35.7          18    3550\n 5 female Adelie            36.2          17.2  3150\n 6 female Adelie            36            17.1  3700\n 7 female Gentoo            48.2          14.3  4600\n 8 female Gentoo            43.2          14.5  4450\n 9 female Gentoo            47.5          14    4875\n10 female Gentoo            47.2          13.7  4925\n\n\nrelocate(tbl, sex, .before = species)\nOutput\n\n# A tibble: 10 × 5\n   sex    species bill_length_mm bill_depth_mm  mass\n   &lt;fct&gt;  &lt;fct&gt;            &lt;dbl&gt;         &lt;dbl&gt; &lt;int&gt;\n 1 male   Adelie            39.1          18.7  3750\n 2 female Adelie            39.5          16.7  3250\n 3 female Adelie            35.7          16.9  3150\n 4 female Adelie            35.7          18    3550\n 5 female Adelie            36.2          17.2  3150\n 6 female Adelie            36            17.1  3700\n 7 female Gentoo            48.2          14.3  4600\n 8 female Gentoo            43.2          14.5  4450\n 9 female Gentoo            47.5          14    4875\n10 female Gentoo            47.2          13.7  4925\n\n\n\n\n\n\n\n\ncols &lt;- colnames(dt)\nnew_order &lt;- c(\"sex\", setdiff(cols, \"sex\"))\ndt[, ..new_order]\nOutput\n\n       sex species bill_length_mm bill_depth_mm  mass\n    &lt;fctr&gt;  &lt;fctr&gt;          &lt;num&gt;         &lt;num&gt; &lt;int&gt;\n 1:   male  Adelie           39.1          18.7  3750\n 2: female  Adelie           39.5          16.7  3250\n 3: female  Adelie           35.7          16.9  3150\n 4: female  Adelie           35.7          18.0  3550\n 5: female  Adelie           36.2          17.2  3150\n 6: female  Adelie           36.0          17.1  3700\n 7: female  Gentoo           48.2          14.3  4600\n 8: female  Gentoo           43.2          14.5  4450\n 9: female  Gentoo           47.5          14.0  4875\n10: female  Gentoo           47.2          13.7  4925"
  },
  {
    "objectID": "data-wrangling/base-vs-tidyverse/index.html#rename-columns",
    "href": "data-wrangling/base-vs-tidyverse/index.html#rename-columns",
    "title": "Base R and Tidyverse syntax comparison for data wrangling",
    "section": "2.6 Rename columns",
    "text": "2.6 Rename columns\n\n2.6.1 Rename one column\nRename the bill_length_mm column to length.\n\n\n\ncolnames(df)[3] &lt;- \"length\"\ndf\nOutput\n\n   species    sex length bill_depth_mm mass\n1   Adelie   male   39.1          18.7 3750\n2   Adelie female   39.5          16.7 3250\n3   Adelie female   35.7          16.9 3150\n4   Adelie female   35.7          18.0 3550\n5   Adelie female   36.2          17.2 3150\n6   Adelie female   36.0          17.1 3700\n7   Gentoo female   48.2          14.3 4600\n8   Gentoo female   43.2          14.5 4450\n9   Gentoo female   47.5          14.0 4875\n10  Gentoo female   47.2          13.7 4925\n\n\n\n\nnames(df)[3] &lt;- \"length\"\ndf\nOutput\n\n   species    sex length bill_depth_mm mass\n1   Adelie   male   39.1          18.7 3750\n2   Adelie female   39.5          16.7 3250\n3   Adelie female   35.7          16.9 3150\n4   Adelie female   35.7          18.0 3550\n5   Adelie female   36.2          17.2 3150\n6   Adelie female   36.0          17.1 3700\n7   Gentoo female   48.2          14.3 4600\n8   Gentoo female   43.2          14.5 4450\n9   Gentoo female   47.5          14.0 4875\n10  Gentoo female   47.2          13.7 4925\n\n\n\n\n\nrename(tbl, \n       length = bill_length_mm)\nOutput\n\n# A tibble: 10 × 5\n   species sex    length bill_depth_mm  mass\n   &lt;fct&gt;   &lt;fct&gt;   &lt;dbl&gt;         &lt;dbl&gt; &lt;int&gt;\n 1 Adelie  male     39.1          18.7  3750\n 2 Adelie  female   39.5          16.7  3250\n 3 Adelie  female   35.7          16.9  3150\n 4 Adelie  female   35.7          18    3550\n 5 Adelie  female   36.2          17.2  3150\n 6 Adelie  female   36            17.1  3700\n 7 Gentoo  female   48.2          14.3  4600\n 8 Gentoo  female   43.2          14.5  4450\n 9 Gentoo  female   47.5          14    4875\n10 Gentoo  female   47.2          13.7  4925\n\n\n# changes order at the same time though\nselect(tbl, \n       length = bill_length_mm,\n       everything())\nOutput\n\n# A tibble: 10 × 5\n   length species sex    bill_depth_mm  mass\n    &lt;dbl&gt; &lt;fct&gt;   &lt;fct&gt;          &lt;dbl&gt; &lt;int&gt;\n 1   39.1 Adelie  male            18.7  3750\n 2   39.5 Adelie  female          16.7  3250\n 3   35.7 Adelie  female          16.9  3150\n 4   35.7 Adelie  female          18    3550\n 5   36.2 Adelie  female          17.2  3150\n 6   36   Adelie  female          17.1  3700\n 7   48.2 Gentoo  female          14.3  4600\n 8   43.2 Gentoo  female          14.5  4450\n 9   47.5 Gentoo  female          14    4875\n10   47.2 Gentoo  female          13.7  4925\n\n\n\n\nnm_dict &lt;- c(\"length\" = \"bill_length_mm\")\nrename(tbl, any_of(nm_dict))\nOutput\n\n# A tibble: 10 × 5\n   species sex    length bill_depth_mm  mass\n   &lt;fct&gt;   &lt;fct&gt;   &lt;dbl&gt;         &lt;dbl&gt; &lt;int&gt;\n 1 Adelie  male     39.1          18.7  3750\n 2 Adelie  female   39.5          16.7  3250\n 3 Adelie  female   35.7          16.9  3150\n 4 Adelie  female   35.7          18    3550\n 5 Adelie  female   36.2          17.2  3150\n 6 Adelie  female   36            17.1  3700\n 7 Gentoo  female   48.2          14.3  4600\n 8 Gentoo  female   43.2          14.5  4450\n 9 Gentoo  female   47.5          14    4875\n10 Gentoo  female   47.2          13.7  4925\n\n\n\n\n\n\n\n\nsetnames(dt, \"bill_length_mm\", \"length\")\ndt\nOutput\n\n    species    sex length bill_depth_mm  mass\n     &lt;fctr&gt; &lt;fctr&gt;  &lt;num&gt;         &lt;num&gt; &lt;int&gt;\n 1:  Adelie   male   39.1          18.7  3750\n 2:  Adelie female   39.5          16.7  3250\n 3:  Adelie female   35.7          16.9  3150\n 4:  Adelie female   35.7          18.0  3550\n 5:  Adelie female   36.2          17.2  3150\n 6:  Adelie female   36.0          17.1  3700\n 7:  Gentoo female   48.2          14.3  4600\n 8:  Gentoo female   43.2          14.5  4450\n 9:  Gentoo female   47.5          14.0  4875\n10:  Gentoo female   47.2          13.7  4925\n\n\n\n\n\n2.6.2 Rename multiple columns\nRename the bill_length_mm and bill_depth_mm columns to bill_length and bill_depth, respectively, by a function that removes the suffix “_mm”.\n\n\n\ncols &lt;- colnames(df)\n\n\ncolnames(df) &lt;- sub(\"_mm\", \"\", cols)\ndf\nOutput\n\n   species    sex bill_length bill_depth mass\n1   Adelie   male        39.1       18.7 3750\n2   Adelie female        39.5       16.7 3250\n3   Adelie female        35.7       16.9 3150\n4   Adelie female        35.7       18.0 3550\n5   Adelie female        36.2       17.2 3150\n6   Adelie female        36.0       17.1 3700\n7   Gentoo female        48.2       14.3 4600\n8   Gentoo female        43.2       14.5 4450\n9   Gentoo female        47.5       14.0 4875\n10  Gentoo female        47.2       13.7 4925\n\n\n\n\nnames(df)[3:4] &lt;- sub(\"_mm\", \"\", cols[3:4])\ndf\nOutput\n\n   species    sex bill_length bill_depth mass\n1   Adelie   male        39.1       18.7 3750\n2   Adelie female        39.5       16.7 3250\n3   Adelie female        35.7       16.9 3150\n4   Adelie female        35.7       18.0 3550\n5   Adelie female        36.2       17.2 3150\n6   Adelie female        36.0       17.1 3700\n7   Gentoo female        48.2       14.3 4600\n8   Gentoo female        43.2       14.5 4450\n9   Gentoo female        47.5       14.0 4875\n10  Gentoo female        47.2       13.7 4925\n\n\n\n\n\nrename_with(tbl, \n            ~str_remove(., \"_mm\"))\nOutput\n\n# A tibble: 10 × 5\n   species sex    bill_length bill_depth  mass\n   &lt;fct&gt;   &lt;fct&gt;        &lt;dbl&gt;      &lt;dbl&gt; &lt;int&gt;\n 1 Adelie  male          39.1       18.7  3750\n 2 Adelie  female        39.5       16.7  3250\n 3 Adelie  female        35.7       16.9  3150\n 4 Adelie  female        35.7       18    3550\n 5 Adelie  female        36.2       17.2  3150\n 6 Adelie  female        36         17.1  3700\n 7 Gentoo  female        48.2       14.3  4600\n 8 Gentoo  female        43.2       14.5  4450\n 9 Gentoo  female        47.5       14    4875\n10 Gentoo  female        47.2       13.7  4925\n\n\nrename_with(tbl, \n            ~str_remove(., \"_mm\"), 3:4)\nOutput\n\n# A tibble: 10 × 5\n   species sex    bill_length bill_depth  mass\n   &lt;fct&gt;   &lt;fct&gt;        &lt;dbl&gt;      &lt;dbl&gt; &lt;int&gt;\n 1 Adelie  male          39.1       18.7  3750\n 2 Adelie  female        39.5       16.7  3250\n 3 Adelie  female        35.7       16.9  3150\n 4 Adelie  female        35.7       18    3550\n 5 Adelie  female        36.2       17.2  3150\n 6 Adelie  female        36         17.1  3700\n 7 Gentoo  female        48.2       14.3  4600\n 8 Gentoo  female        43.2       14.5  4450\n 9 Gentoo  female        47.5       14    4875\n10 Gentoo  female        47.2       13.7  4925\n\n\n\n\n\n\n\n\ncols &lt;- colnames(dt)\n\n\nsetnames(dt, cols, sub(\"_mm\", \"\", cols))\ndt\nOutput\n\n    species    sex bill_length bill_depth  mass\n     &lt;fctr&gt; &lt;fctr&gt;       &lt;num&gt;      &lt;num&gt; &lt;int&gt;\n 1:  Adelie   male        39.1       18.7  3750\n 2:  Adelie female        39.5       16.7  3250\n 3:  Adelie female        35.7       16.9  3150\n 4:  Adelie female        35.7       18.0  3550\n 5:  Adelie female        36.2       17.2  3150\n 6:  Adelie female        36.0       17.1  3700\n 7:  Gentoo female        48.2       14.3  4600\n 8:  Gentoo female        43.2       14.5  4450\n 9:  Gentoo female        47.5       14.0  4875\n10:  Gentoo female        47.2       13.7  4925\n\n\n\n\nsetnames(dt, cols[3:4], sub(\"_mm\", \"\", cols[3:4]))\ndt\nOutput\n\n    species    sex bill_length bill_depth  mass\n     &lt;fctr&gt; &lt;fctr&gt;       &lt;num&gt;      &lt;num&gt; &lt;int&gt;\n 1:  Adelie   male        39.1       18.7  3750\n 2:  Adelie female        39.5       16.7  3250\n 3:  Adelie female        35.7       16.9  3150\n 4:  Adelie female        35.7       18.0  3550\n 5:  Adelie female        36.2       17.2  3150\n 6:  Adelie female        36.0       17.1  3700\n 7:  Gentoo female        48.2       14.3  4600\n 8:  Gentoo female        43.2       14.5  4450\n 9:  Gentoo female        47.5       14.0  4875\n10:  Gentoo female        47.2       13.7  4925"
  },
  {
    "objectID": "data-wrangling/base-vs-tidyverse/index.html#subset-rows",
    "href": "data-wrangling/base-vs-tidyverse/index.html#subset-rows",
    "title": "Base R and Tidyverse syntax comparison for data wrangling",
    "section": "2.7 Subset rows",
    "text": "2.7 Subset rows\n\n2.7.1 By position\nSelect the first two rows.\n\n\n\ndf[1:2, ]\nOutput\n\n  species    sex bill_length_mm bill_depth_mm mass\n1  Adelie   male           39.1          18.7 3750\n2  Adelie female           39.5          16.7 3250\n\n\ndf[-c(1:2), ]\nOutput\n\n   species    sex bill_length_mm bill_depth_mm mass\n3   Adelie female           35.7          16.9 3150\n4   Adelie female           35.7          18.0 3550\n5   Adelie female           36.2          17.2 3150\n6   Adelie female           36.0          17.1 3700\n7   Gentoo female           48.2          14.3 4600\n8   Gentoo female           43.2          14.5 4450\n9   Gentoo female           47.5          14.0 4875\n10  Gentoo female           47.2          13.7 4925\n\n\n\n\n\nslice(tbl, 1:2)\nOutput\n\n# A tibble: 2 × 5\n  species sex    bill_length_mm bill_depth_mm  mass\n  &lt;fct&gt;   &lt;fct&gt;           &lt;dbl&gt;         &lt;dbl&gt; &lt;int&gt;\n1 Adelie  male             39.1          18.7  3750\n2 Adelie  female           39.5          16.7  3250\n\n\nslice(tbl, -c(1:2))\nOutput\n\n# A tibble: 8 × 5\n  species sex    bill_length_mm bill_depth_mm  mass\n  &lt;fct&gt;   &lt;fct&gt;           &lt;dbl&gt;         &lt;dbl&gt; &lt;int&gt;\n1 Adelie  female           35.7          16.9  3150\n2 Adelie  female           35.7          18    3550\n3 Adelie  female           36.2          17.2  3150\n4 Adelie  female           36            17.1  3700\n5 Gentoo  female           48.2          14.3  4600\n6 Gentoo  female           43.2          14.5  4450\n7 Gentoo  female           47.5          14    4875\n8 Gentoo  female           47.2          13.7  4925\n\n\n\n\n\n\n\n\ndt[1:2, ]\nOutput\n\n   species    sex bill_length_mm bill_depth_mm  mass\n    &lt;fctr&gt; &lt;fctr&gt;          &lt;num&gt;         &lt;num&gt; &lt;int&gt;\n1:  Adelie   male           39.1          18.7  3750\n2:  Adelie female           39.5          16.7  3250\n\n\n\n\n\n2.7.2 By booleans\nSelect rows where the classification of sex is not missing.\n\n\n\ndf[!is.na(df$sex), ]\nOutput\n\n   species    sex bill_length_mm bill_depth_mm mass\n1   Adelie   male           39.1          18.7 3750\n2   Adelie female           39.5          16.7 3250\n3   Adelie female           35.7          16.9 3150\n4   Adelie female           35.7          18.0 3550\n5   Adelie female           36.2          17.2 3150\n6   Adelie female           36.0          17.1 3700\n7   Gentoo female           48.2          14.3 4600\n8   Gentoo female           43.2          14.5 4450\n9   Gentoo female           47.5          14.0 4875\n10  Gentoo female           47.2          13.7 4925\n\n\nsubset(df, !is.na(sex))\nOutput\n\n   species    sex bill_length_mm bill_depth_mm mass\n1   Adelie   male           39.1          18.7 3750\n2   Adelie female           39.5          16.7 3250\n3   Adelie female           35.7          16.9 3150\n4   Adelie female           35.7          18.0 3550\n5   Adelie female           36.2          17.2 3150\n6   Adelie female           36.0          17.1 3700\n7   Gentoo female           48.2          14.3 4600\n8   Gentoo female           43.2          14.5 4450\n9   Gentoo female           47.5          14.0 4875\n10  Gentoo female           47.2          13.7 4925\n\n\n\n\n\nfilter(tbl, !is.na(sex))\nOutput\n\n# A tibble: 10 × 5\n   species sex    bill_length_mm bill_depth_mm  mass\n   &lt;fct&gt;   &lt;fct&gt;           &lt;dbl&gt;         &lt;dbl&gt; &lt;int&gt;\n 1 Adelie  male             39.1          18.7  3750\n 2 Adelie  female           39.5          16.7  3250\n 3 Adelie  female           35.7          16.9  3150\n 4 Adelie  female           35.7          18    3550\n 5 Adelie  female           36.2          17.2  3150\n 6 Adelie  female           36            17.1  3700\n 7 Gentoo  female           48.2          14.3  4600\n 8 Gentoo  female           43.2          14.5  4450\n 9 Gentoo  female           47.5          14    4875\n10 Gentoo  female           47.2          13.7  4925\n\n\n\n\n\n\n\n\ndt[!is.na(sex), ]\nOutput\n\n    species    sex bill_length_mm bill_depth_mm  mass\n     &lt;fctr&gt; &lt;fctr&gt;          &lt;num&gt;         &lt;num&gt; &lt;int&gt;\n 1:  Adelie   male           39.1          18.7  3750\n 2:  Adelie female           39.5          16.7  3250\n 3:  Adelie female           35.7          16.9  3150\n 4:  Adelie female           35.7          18.0  3550\n 5:  Adelie female           36.2          17.2  3150\n 6:  Adelie female           36.0          17.1  3700\n 7:  Gentoo female           48.2          14.3  4600\n 8:  Gentoo female           43.2          14.5  4450\n 9:  Gentoo female           47.5          14.0  4875\n10:  Gentoo female           47.2          13.7  4925"
  },
  {
    "objectID": "data-wrangling/base-vs-tidyverse/index.html#arrange-rows",
    "href": "data-wrangling/base-vs-tidyverse/index.html#arrange-rows",
    "title": "Base R and Tidyverse syntax comparison for data wrangling",
    "section": "2.8 Arrange rows",
    "text": "2.8 Arrange rows\nOrder the rows by sex and bill_length_mm in ascending order.\n\n\n\ndf[order(df$sex, df$bill_length_mm), ]\nOutput\n\n   species    sex bill_length_mm bill_depth_mm mass\n3   Adelie female           35.7          16.9 3150\n4   Adelie female           35.7          18.0 3550\n6   Adelie female           36.0          17.1 3700\n5   Adelie female           36.2          17.2 3150\n2   Adelie female           39.5          16.7 3250\n8   Gentoo female           43.2          14.5 4450\n10  Gentoo female           47.2          13.7 4925\n9   Gentoo female           47.5          14.0 4875\n7   Gentoo female           48.2          14.3 4600\n1   Adelie   male           39.1          18.7 3750\n\n\n\n\n\narrange(tbl, sex, bill_length_mm)\nOutput\n\n# A tibble: 10 × 5\n   species sex    bill_length_mm bill_depth_mm  mass\n   &lt;fct&gt;   &lt;fct&gt;           &lt;dbl&gt;         &lt;dbl&gt; &lt;int&gt;\n 1 Adelie  female           35.7          16.9  3150\n 2 Adelie  female           35.7          18    3550\n 3 Adelie  female           36            17.1  3700\n 4 Adelie  female           36.2          17.2  3150\n 5 Adelie  female           39.5          16.7  3250\n 6 Gentoo  female           43.2          14.5  4450\n 7 Gentoo  female           47.2          13.7  4925\n 8 Gentoo  female           47.5          14    4875\n 9 Gentoo  female           48.2          14.3  4600\n10 Adelie  male             39.1          18.7  3750\n\n\n\n\n\n\n\n\ndt[order(sex, bill_length_mm), ]\nOutput\n\n    species    sex bill_length_mm bill_depth_mm  mass\n     &lt;fctr&gt; &lt;fctr&gt;          &lt;num&gt;         &lt;num&gt; &lt;int&gt;\n 1:  Adelie female           35.7          16.9  3150\n 2:  Adelie female           35.7          18.0  3550\n 3:  Adelie female           36.0          17.1  3700\n 4:  Adelie female           36.2          17.2  3150\n 5:  Adelie female           39.5          16.7  3250\n 6:  Gentoo female           43.2          14.5  4450\n 7:  Gentoo female           47.2          13.7  4925\n 8:  Gentoo female           47.5          14.0  4875\n 9:  Gentoo female           48.2          14.3  4600\n10:  Adelie   male           39.1          18.7  3750\n\n\n\nOrder the rows by sex and bill_length_mm in descending order.\n\n\n\ndf[order(df$sex, \n         df$bill_length_mm,\n         decreasing = TRUE), ]\nOutput\n\n   species    sex bill_length_mm bill_depth_mm mass\n1   Adelie   male           39.1          18.7 3750\n7   Gentoo female           48.2          14.3 4600\n9   Gentoo female           47.5          14.0 4875\n10  Gentoo female           47.2          13.7 4925\n8   Gentoo female           43.2          14.5 4450\n2   Adelie female           39.5          16.7 3250\n5   Adelie female           36.2          17.2 3150\n6   Adelie female           36.0          17.1 3700\n3   Adelie female           35.7          16.9 3150\n4   Adelie female           35.7          18.0 3550\n\n\n\n\n\narrange(tbl, desc(sex), desc(bill_length_mm))\nOutput\n\n# A tibble: 10 × 5\n   species sex    bill_length_mm bill_depth_mm  mass\n   &lt;fct&gt;   &lt;fct&gt;           &lt;dbl&gt;         &lt;dbl&gt; &lt;int&gt;\n 1 Adelie  male             39.1          18.7  3750\n 2 Gentoo  female           48.2          14.3  4600\n 3 Gentoo  female           47.5          14    4875\n 4 Gentoo  female           47.2          13.7  4925\n 5 Gentoo  female           43.2          14.5  4450\n 6 Adelie  female           39.5          16.7  3250\n 7 Adelie  female           36.2          17.2  3150\n 8 Adelie  female           36            17.1  3700\n 9 Adelie  female           35.7          16.9  3150\n10 Adelie  female           35.7          18    3550\n\n\n\n\n\n\n\n\ndt[order(sex, bill_length_mm, decreasing = TRUE), ]\nOutput\n\n    species    sex bill_length_mm bill_depth_mm  mass\n     &lt;fctr&gt; &lt;fctr&gt;          &lt;num&gt;         &lt;num&gt; &lt;int&gt;\n 1:  Adelie   male           39.1          18.7  3750\n 2:  Gentoo female           48.2          14.3  4600\n 3:  Gentoo female           47.5          14.0  4875\n 4:  Gentoo female           47.2          13.7  4925\n 5:  Gentoo female           43.2          14.5  4450\n 6:  Adelie female           39.5          16.7  3250\n 7:  Adelie female           36.2          17.2  3150\n 8:  Adelie female           36.0          17.1  3700\n 9:  Adelie female           35.7          16.9  3150\n10:  Adelie female           35.7          18.0  3550\n\n\n\nOrder the rows by sex in descending order and bill_length_mm in ascending order.\n\n\n\ndf[order(factor(df$sex, \n                levels = rev(levels(df$sex))), \n         df$bill_length_mm), ]\nOutput\n\n   species    sex bill_length_mm bill_depth_mm mass\n1   Adelie   male           39.1          18.7 3750\n3   Adelie female           35.7          16.9 3150\n4   Adelie female           35.7          18.0 3550\n6   Adelie female           36.0          17.1 3700\n5   Adelie female           36.2          17.2 3150\n2   Adelie female           39.5          16.7 3250\n8   Gentoo female           43.2          14.5 4450\n10  Gentoo female           47.2          13.7 4925\n9   Gentoo female           47.5          14.0 4875\n7   Gentoo female           48.2          14.3 4600\n\n\n\n\n\narrange(tbl, desc(sex), bill_length_mm)\nOutput\n\n# A tibble: 10 × 5\n   species sex    bill_length_mm bill_depth_mm  mass\n   &lt;fct&gt;   &lt;fct&gt;           &lt;dbl&gt;         &lt;dbl&gt; &lt;int&gt;\n 1 Adelie  male             39.1          18.7  3750\n 2 Adelie  female           35.7          16.9  3150\n 3 Adelie  female           35.7          18    3550\n 4 Adelie  female           36            17.1  3700\n 5 Adelie  female           36.2          17.2  3150\n 6 Adelie  female           39.5          16.7  3250\n 7 Gentoo  female           43.2          14.5  4450\n 8 Gentoo  female           47.2          13.7  4925\n 9 Gentoo  female           47.5          14    4875\n10 Gentoo  female           48.2          14.3  4600\n\n\n\n\n\n\n\n\ndt[order(factor(sex, \n                levels = rev(levels(sex))), \n         bill_length_mm), ]\nOutput\n\n    species    sex bill_length_mm bill_depth_mm  mass\n     &lt;fctr&gt; &lt;fctr&gt;          &lt;num&gt;         &lt;num&gt; &lt;int&gt;\n 1:  Adelie   male           39.1          18.7  3750\n 2:  Adelie female           35.7          16.9  3150\n 3:  Adelie female           35.7          18.0  3550\n 4:  Adelie female           36.0          17.1  3700\n 5:  Adelie female           36.2          17.2  3150\n 6:  Adelie female           39.5          16.7  3250\n 7:  Gentoo female           43.2          14.5  4450\n 8:  Gentoo female           47.2          13.7  4925\n 9:  Gentoo female           47.5          14.0  4875\n10:  Gentoo female           48.2          14.3  4600"
  },
  {
    "objectID": "data-wrangling/base-vs-tidyverse/index.html#insert-or-update-column",
    "href": "data-wrangling/base-vs-tidyverse/index.html#insert-or-update-column",
    "title": "Base R and Tidyverse syntax comparison for data wrangling",
    "section": "2.9 Insert or update column",
    "text": "2.9 Insert or update column\nAdd a new column mpbl that is the ratio of mass to bill_length_mm.\n\n\n\ntransform(df, mpbl = mass / bill_length_mm)\nOutput\n\n   species    sex bill_length_mm bill_depth_mm mass      mpbl\n1   Adelie   male           39.1          18.7 3750  95.90793\n2   Adelie female           39.5          16.7 3250  82.27848\n3   Adelie female           35.7          16.9 3150  88.23529\n4   Adelie female           35.7          18.0 3550  99.43978\n5   Adelie female           36.2          17.2 3150  87.01657\n6   Adelie female           36.0          17.1 3700 102.77778\n7   Gentoo female           48.2          14.3 4600  95.43568\n8   Gentoo female           43.2          14.5 4450 103.00926\n9   Gentoo female           47.5          14.0 4875 102.63158\n10  Gentoo female           47.2          13.7 4925 104.34322\n\n\ndf$mpbl &lt;- df$mass / df$bill_length_mm\ndf\nOutput\n\n   species    sex bill_length_mm bill_depth_mm mass      mpbl\n1   Adelie   male           39.1          18.7 3750  95.90793\n2   Adelie female           39.5          16.7 3250  82.27848\n3   Adelie female           35.7          16.9 3150  88.23529\n4   Adelie female           35.7          18.0 3550  99.43978\n5   Adelie female           36.2          17.2 3150  87.01657\n6   Adelie female           36.0          17.1 3700 102.77778\n7   Gentoo female           48.2          14.3 4600  95.43568\n8   Gentoo female           43.2          14.5 4450 103.00926\n9   Gentoo female           47.5          14.0 4875 102.63158\n10  Gentoo female           47.2          13.7 4925 104.34322\n\n\ndf[[\"mpbl\"]] &lt;- df$mass / df$bill_length_mm\ndf\nOutput\n\n   species    sex bill_length_mm bill_depth_mm mass      mpbl\n1   Adelie   male           39.1          18.7 3750  95.90793\n2   Adelie female           39.5          16.7 3250  82.27848\n3   Adelie female           35.7          16.9 3150  88.23529\n4   Adelie female           35.7          18.0 3550  99.43978\n5   Adelie female           36.2          17.2 3150  87.01657\n6   Adelie female           36.0          17.1 3700 102.77778\n7   Gentoo female           48.2          14.3 4600  95.43568\n8   Gentoo female           43.2          14.5 4450 103.00926\n9   Gentoo female           47.5          14.0 4875 102.63158\n10  Gentoo female           47.2          13.7 4925 104.34322\n\n\n\n\n\nmutate(tbl, mpbl = mass / bill_length_mm)\nOutput\n\n# A tibble: 10 × 6\n   species sex    bill_length_mm bill_depth_mm  mass  mpbl\n   &lt;fct&gt;   &lt;fct&gt;           &lt;dbl&gt;         &lt;dbl&gt; &lt;int&gt; &lt;dbl&gt;\n 1 Adelie  male             39.1          18.7  3750  95.9\n 2 Adelie  female           39.5          16.7  3250  82.3\n 3 Adelie  female           35.7          16.9  3150  88.2\n 4 Adelie  female           35.7          18    3550  99.4\n 5 Adelie  female           36.2          17.2  3150  87.0\n 6 Adelie  female           36            17.1  3700 103. \n 7 Gentoo  female           48.2          14.3  4600  95.4\n 8 Gentoo  female           43.2          14.5  4450 103. \n 9 Gentoo  female           47.5          14    4875 103. \n10 Gentoo  female           47.2          13.7  4925 104. \n\n\n\n\n\n\n\n\ndt[, mpbl := mass / bill_length_mm]\ndt\nOutput\n\n    species    sex bill_length_mm bill_depth_mm  mass      mpbl\n     &lt;fctr&gt; &lt;fctr&gt;          &lt;num&gt;         &lt;num&gt; &lt;int&gt;     &lt;num&gt;\n 1:  Adelie   male           39.1          18.7  3750  95.90793\n 2:  Adelie female           39.5          16.7  3250  82.27848\n 3:  Adelie female           35.7          16.9  3150  88.23529\n 4:  Adelie female           35.7          18.0  3550  99.43978\n 5:  Adelie female           36.2          17.2  3150  87.01657\n 6:  Adelie female           36.0          17.1  3700 102.77778\n 7:  Gentoo female           48.2          14.3  4600  95.43568\n 8:  Gentoo female           43.2          14.5  4450 103.00926\n 9:  Gentoo female           47.5          14.0  4875 102.63158\n10:  Gentoo female           47.2          13.7  4925 104.34322"
  },
  {
    "objectID": "data-wrangling/base-vs-tidyverse/index.html#group-operations",
    "href": "data-wrangling/base-vs-tidyverse/index.html#group-operations",
    "title": "Base R and Tidyverse syntax comparison for data wrangling",
    "section": "2.10 Group operations",
    "text": "2.10 Group operations\nCalculate the average, standard deviation, and number of observations for mass grouped by sex and species.\n\n\n\naggregate(df, mass ~ sex + species, \n          \\(x) c(avg = mean(x), \n                 sd = sd(x), \n                 n = length(x)))\nOutput\n\n     sex species mass.avg  mass.sd   mass.n\n1 female  Adelie 3360.000  250.998    5.000\n2   male  Adelie 3750.000       NA    1.000\n3 female  Gentoo 4712.500  225.924    4.000\n\n\naggregate(df$mass, \n          by = list(df$sex, df$species), \n          \\(x) c(avg = mean(x), \n                 sd = sd(x), \n                 n = length(x)))\nOutput\n\n  Group.1 Group.2    x.avg     x.sd      x.n\n1  female  Adelie 3360.000  250.998    5.000\n2    male  Adelie 3750.000       NA    1.000\n3  female  Gentoo 4712.500  225.924    4.000\n\n\n\nBelow doesn’t work where there are missing combinations.\n\nwith(df, \n     tapply(\n       mass, \n       list(sex = sex, species = species), \n       \\(x) c(avg = mean(x), \n              sd = sd(x), \n              n = length(x))\n       )) |&gt;\n  array2DF() \nOutput\n\n     sex   species                    Value\n1 female    Adelie 3360.000, 250.998, 5.000\n2   male    Adelie              3750, NA, 1\n3 female Chinstrap                     NULL\n4   male Chinstrap                     NULL\n5 female    Gentoo 4712.500, 225.924, 4.000\n6   male    Gentoo                     NULL\n\n\n\n\n\nsummarise(tbl, \n          avg = mean(mass), \n          sd = sd(mass), \n          n = n(),\n          .by = c(sex, species))\nOutput\n\n# A tibble: 3 × 5\n  sex    species   avg    sd     n\n  &lt;fct&gt;  &lt;fct&gt;   &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt;\n1 male   Adelie  3750    NA      1\n2 female Adelie  3360   251.     5\n3 female Gentoo  4712.  226.     4\n\n\nsummarise(group_by(tbl, sex, species), \n          avg = mean(mass), \n          sd = sd(mass),\n          n = n())\nOutput\n\n# A tibble: 3 × 5\n# Groups:   sex [2]\n  sex    species   avg    sd     n\n  &lt;fct&gt;  &lt;fct&gt;   &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt;\n1 female Adelie  3360   251.     5\n2 female Gentoo  4712.  226.     4\n3 male   Adelie  3750    NA      1\n\n\n\n\n\n\n\n\ndt[, \n   .(avg = mean(mass), \n     sd = sd(mass),\n     n = .N), \n   by = .(sex, species)]\nOutput\n\n      sex species    avg      sd     n\n   &lt;fctr&gt;  &lt;fctr&gt;  &lt;num&gt;   &lt;num&gt; &lt;int&gt;\n1:   male  Adelie 3750.0      NA     1\n2: female  Adelie 3360.0 250.998     5\n3: female  Gentoo 4712.5 225.924     4"
  },
  {
    "objectID": "data-wrangling/base-vs-tidyverse/index.html#row-operations",
    "href": "data-wrangling/base-vs-tidyverse/index.html#row-operations",
    "title": "Base R and Tidyverse syntax comparison for data wrangling",
    "section": "2.11 Row operations",
    "text": "2.11 Row operations\nThe maximum value of numeric columns for each row.\n\n\n\napply(df[, sapply(df, is.numeric)], 1, max)  \nOutput\n\n [1] 3750 3250 3150 3550 3150 3700 4600 4450 4875 4925\n\n\n\n\n\ntbl |&gt; \n  rowwise() |&gt; \n  mutate(result = max(c_across(where(is.numeric)))) |&gt; \n  pull(result)\nOutput\n\n [1] 3750 3250 3150 3550 3150 3700 4600 4450 4875 4925\n\n\n\n\n\n\n\n\ndt[, apply(.SD, 1, max), .SDcol = is.numeric]\nOutput\n\n [1] 3750 3250 3150 3550 3150 3700 4600 4450 4875 4925"
  },
  {
    "objectID": "data-wrangling/base-vs-tidyverse/index.html#column-operations",
    "href": "data-wrangling/base-vs-tidyverse/index.html#column-operations",
    "title": "Base R and Tidyverse syntax comparison for data wrangling",
    "section": "2.12 Column operations",
    "text": "2.12 Column operations\nThe maximum value of numeric columns for each column.\n\n\n\napply(df[, sapply(df, is.numeric)], 2, max)  \nOutput\n\nbill_length_mm  bill_depth_mm           mass \n          48.2           18.7         4925.0 \n\n\n\n\n\nsummarise(tbl, \n          across(where(is.numeric), max))\nOutput\n\n# A tibble: 1 × 3\n  bill_length_mm bill_depth_mm  mass\n           &lt;dbl&gt;         &lt;dbl&gt; &lt;int&gt;\n1           48.2          18.7  4925\n\n\n\n\n\n\n\n\ndt[, lapply(.SD, max), .SDcol = is.numeric]\nOutput\n\n   bill_length_mm bill_depth_mm  mass     mpbl\n            &lt;num&gt;         &lt;num&gt; &lt;int&gt;    &lt;num&gt;\n1:           48.2          18.7  4925 104.3432"
  },
  {
    "objectID": "data-wrangling/base-vs-tidyverse/index.html#update-specific-cells-in-a-column-with-a-single-value",
    "href": "data-wrangling/base-vs-tidyverse/index.html#update-specific-cells-in-a-column-with-a-single-value",
    "title": "Base R and Tidyverse syntax comparison for data wrangling",
    "section": "2.13 Update specific cells in a column with a single value",
    "text": "2.13 Update specific cells in a column with a single value\n\n2.13.1 By position\nModify the first two rows of the mass column to be 0.\n\n\n\ndf[1:2, \"mass\"] &lt;- 0\ndf\nOutput\n\n   species    sex bill_length_mm bill_depth_mm mass\n1   Adelie   male           39.1          18.7    0\n2   Adelie female           39.5          16.7    0\n3   Adelie female           35.7          16.9 3150\n4   Adelie female           35.7          18.0 3550\n5   Adelie female           36.2          17.2 3150\n6   Adelie female           36.0          17.1 3700\n7   Gentoo female           48.2          14.3 4600\n8   Gentoo female           43.2          14.5 4450\n9   Gentoo female           47.5          14.0 4875\n10  Gentoo female           47.2          13.7 4925\n\n\n\n\ndf$mass[1:2] &lt;- 0\ndf\nOutput\n\n   species    sex bill_length_mm bill_depth_mm mass\n1   Adelie   male           39.1          18.7    0\n2   Adelie female           39.5          16.7    0\n3   Adelie female           35.7          16.9 3150\n4   Adelie female           35.7          18.0 3550\n5   Adelie female           36.2          17.2 3150\n6   Adelie female           36.0          17.1 3700\n7   Gentoo female           48.2          14.3 4600\n8   Gentoo female           43.2          14.5 4450\n9   Gentoo female           47.5          14.0 4875\n10  Gentoo female           47.2          13.7 4925\n\n\n\n\n\nmutate(tbl, \n       mass = if_else(row_number() %in% 1:2, \n                      0, \n                      mass))\nOutput\n\n# A tibble: 10 × 5\n   species sex    bill_length_mm bill_depth_mm  mass\n   &lt;fct&gt;   &lt;fct&gt;           &lt;dbl&gt;         &lt;dbl&gt; &lt;dbl&gt;\n 1 Adelie  male             39.1          18.7     0\n 2 Adelie  female           39.5          16.7     0\n 3 Adelie  female           35.7          16.9  3150\n 4 Adelie  female           35.7          18    3550\n 5 Adelie  female           36.2          17.2  3150\n 6 Adelie  female           36            17.1  3700\n 7 Gentoo  female           48.2          14.3  4600\n 8 Gentoo  female           43.2          14.5  4450\n 9 Gentoo  female           47.5          14    4875\n10 Gentoo  female           47.2          13.7  4925\n\n\n\n\n\n\n\n\ndt[, mass := fifelse(.I %in% 1:2, 0, mass)][]\nOutput\n\n    species    sex bill_length_mm bill_depth_mm  mass\n     &lt;fctr&gt; &lt;fctr&gt;          &lt;num&gt;         &lt;num&gt; &lt;num&gt;\n 1:  Adelie   male           39.1          18.7     0\n 2:  Adelie female           39.5          16.7     0\n 3:  Adelie female           35.7          16.9  3150\n 4:  Adelie female           35.7          18.0  3550\n 5:  Adelie female           36.2          17.2  3150\n 6:  Adelie female           36.0          17.1  3700\n 7:  Gentoo female           48.2          14.3  4600\n 8:  Gentoo female           43.2          14.5  4450\n 9:  Gentoo female           47.5          14.0  4875\n10:  Gentoo female           47.2          13.7  4925\n\n\n\n\n\n2.13.2 By boolean\nModify the mass column to 0 for rows where sex is female.\n\n\n\ndf[df$sex == \"female\", \"mass\"] &lt;- 0\ndf\nOutput\n\n   species    sex bill_length_mm bill_depth_mm mass\n1   Adelie   male           39.1          18.7 3750\n2   Adelie female           39.5          16.7    0\n3   Adelie female           35.7          16.9    0\n4   Adelie female           35.7          18.0    0\n5   Adelie female           36.2          17.2    0\n6   Adelie female           36.0          17.1    0\n7   Gentoo female           48.2          14.3    0\n8   Gentoo female           43.2          14.5    0\n9   Gentoo female           47.5          14.0    0\n10  Gentoo female           47.2          13.7    0\n\n\n\n\ndf$mass[df$sex == \"female\"] &lt;- 0\ndf\nOutput\n\n   species    sex bill_length_mm bill_depth_mm mass\n1   Adelie   male           39.1          18.7 3750\n2   Adelie female           39.5          16.7    0\n3   Adelie female           35.7          16.9    0\n4   Adelie female           35.7          18.0    0\n5   Adelie female           36.2          17.2    0\n6   Adelie female           36.0          17.1    0\n7   Gentoo female           48.2          14.3    0\n8   Gentoo female           43.2          14.5    0\n9   Gentoo female           47.5          14.0    0\n10  Gentoo female           47.2          13.7    0\n\n\n\n\n\nmutate(tbl, \n       mass = ifelse(sex == \"female\", \n                     0, \n                     mass))\nOutput\n\n# A tibble: 10 × 5\n   species sex    bill_length_mm bill_depth_mm  mass\n   &lt;fct&gt;   &lt;fct&gt;           &lt;dbl&gt;         &lt;dbl&gt; &lt;dbl&gt;\n 1 Adelie  male             39.1          18.7  3750\n 2 Adelie  female           39.5          16.7     0\n 3 Adelie  female           35.7          16.9     0\n 4 Adelie  female           35.7          18       0\n 5 Adelie  female           36.2          17.2     0\n 6 Adelie  female           36            17.1     0\n 7 Gentoo  female           48.2          14.3     0\n 8 Gentoo  female           43.2          14.5     0\n 9 Gentoo  female           47.5          14       0\n10 Gentoo  female           47.2          13.7     0\n\n\n\n\n\n\n\n\ndt[sex == \"female\", mass := 0][]\nOutput\n\n    species    sex bill_length_mm bill_depth_mm  mass\n     &lt;fctr&gt; &lt;fctr&gt;          &lt;num&gt;         &lt;num&gt; &lt;int&gt;\n 1:  Adelie   male           39.1          18.7  3750\n 2:  Adelie female           39.5          16.7     0\n 3:  Adelie female           35.7          16.9     0\n 4:  Adelie female           35.7          18.0     0\n 5:  Adelie female           36.2          17.2     0\n 6:  Adelie female           36.0          17.1     0\n 7:  Gentoo female           48.2          14.3     0\n 8:  Gentoo female           43.2          14.5     0\n 9:  Gentoo female           47.5          14.0     0\n10:  Gentoo female           47.2          13.7     0"
  },
  {
    "objectID": "data-wrangling/base-vs-tidyverse/index.html#update-specific-cells-in-a-column-with-a-vector",
    "href": "data-wrangling/base-vs-tidyverse/index.html#update-specific-cells-in-a-column-with-a-vector",
    "title": "Base R and Tidyverse syntax comparison for data wrangling",
    "section": "2.14 Update specific cells in a column with a vector",
    "text": "2.14 Update specific cells in a column with a vector\n\n2.14.1 By position\nModify the first two rows of the mass column to be 0 and 1.\n\n\n\ndf[1:2, \"mass\"] &lt;- c(0, 1)\ndf\nOutput\n\n   species    sex bill_length_mm bill_depth_mm mass\n1   Adelie   male           39.1          18.7    0\n2   Adelie female           39.5          16.7    1\n3   Adelie female           35.7          16.9 3150\n4   Adelie female           35.7          18.0 3550\n5   Adelie female           36.2          17.2 3150\n6   Adelie female           36.0          17.1 3700\n7   Gentoo female           48.2          14.3 4600\n8   Gentoo female           43.2          14.5 4450\n9   Gentoo female           47.5          14.0 4875\n10  Gentoo female           47.2          13.7 4925\n\n\n\n\ndf$mass[1:2] &lt;- c(0, 1)\ndf\nOutput\n\n   species    sex bill_length_mm bill_depth_mm mass\n1   Adelie   male           39.1          18.7    0\n2   Adelie female           39.5          16.7    1\n3   Adelie female           35.7          16.9 3150\n4   Adelie female           35.7          18.0 3550\n5   Adelie female           36.2          17.2 3150\n6   Adelie female           36.0          17.1 3700\n7   Gentoo female           48.2          14.3 4600\n8   Gentoo female           43.2          14.5 4450\n9   Gentoo female           47.5          14.0 4875\n10  Gentoo female           47.2          13.7 4925\n\n\n\n\n\nmutate(tbl, \n       mass = ifelse(row_number() %in% 1:2, \n                     c(0, 1), \n                     mass))\nOutput\n\n# A tibble: 10 × 5\n   species sex    bill_length_mm bill_depth_mm  mass\n   &lt;fct&gt;   &lt;fct&gt;           &lt;dbl&gt;         &lt;dbl&gt; &lt;dbl&gt;\n 1 Adelie  male             39.1          18.7     0\n 2 Adelie  female           39.5          16.7     1\n 3 Adelie  female           35.7          16.9  3150\n 4 Adelie  female           35.7          18    3550\n 5 Adelie  female           36.2          17.2  3150\n 6 Adelie  female           36            17.1  3700\n 7 Gentoo  female           48.2          14.3  4600\n 8 Gentoo  female           43.2          14.5  4450\n 9 Gentoo  female           47.5          14    4875\n10 Gentoo  female           47.2          13.7  4925\n\n\n\n\n\n\n\n\ndt[1:2, mass := c(0, 1)][]\nOutput\n\n    species    sex bill_length_mm bill_depth_mm  mass\n     &lt;fctr&gt; &lt;fctr&gt;          &lt;num&gt;         &lt;num&gt; &lt;int&gt;\n 1:  Adelie   male           39.1          18.7     0\n 2:  Adelie female           39.5          16.7     1\n 3:  Adelie female           35.7          16.9  3150\n 4:  Adelie female           35.7          18.0  3550\n 5:  Adelie female           36.2          17.2  3150\n 6:  Adelie female           36.0          17.1  3700\n 7:  Gentoo female           48.2          14.3  4600\n 8:  Gentoo female           43.2          14.5  4450\n 9:  Gentoo female           47.5          14.0  4875\n10:  Gentoo female           47.2          13.7  4925\n\n\n\n\n\n2.14.2 By boolean\nModify the mass column to be half of its value for rows where sex is female.\n\n\n\nwithin(df, \n       mass[sex == \"female\"] &lt;- mass[sex == \"female\"] / 2)\nOutput\n\n   species    sex bill_length_mm bill_depth_mm   mass\n1   Adelie   male           39.1          18.7 3750.0\n2   Adelie female           39.5          16.7 1625.0\n3   Adelie female           35.7          16.9 1575.0\n4   Adelie female           35.7          18.0 1775.0\n5   Adelie female           36.2          17.2 1575.0\n6   Adelie female           36.0          17.1 1850.0\n7   Gentoo female           48.2          14.3 2300.0\n8   Gentoo female           43.2          14.5 2225.0\n9   Gentoo female           47.5          14.0 2437.5\n10  Gentoo female           47.2          13.7 2462.5\n\n\n\n\n\nmutate(tbl, \n       mass = if_else(sex == \"female\",\n                      mass / 2, \n                      mass))\nOutput\n\n# A tibble: 10 × 5\n   species sex    bill_length_mm bill_depth_mm  mass\n   &lt;fct&gt;   &lt;fct&gt;           &lt;dbl&gt;         &lt;dbl&gt; &lt;dbl&gt;\n 1 Adelie  male             39.1          18.7 3750 \n 2 Adelie  female           39.5          16.7 1625 \n 3 Adelie  female           35.7          16.9 1575 \n 4 Adelie  female           35.7          18   1775 \n 5 Adelie  female           36.2          17.2 1575 \n 6 Adelie  female           36            17.1 1850 \n 7 Gentoo  female           48.2          14.3 2300 \n 8 Gentoo  female           43.2          14.5 2225 \n 9 Gentoo  female           47.5          14   2438.\n10 Gentoo  female           47.2          13.7 2462.\n\n\n\n\n\n\n\n\ndt[sex == \"female\", mass := mass / 2][]\nOutput\n\nWarning in `[.data.table`(dt, sex == \"female\", `:=`(mass, mass/2)): 2437.500000\n(type 'double') at RHS position 8 out-of-range(NA) or truncated (precision\nlost) when assigning to type 'integer' (column 5 named 'mass')\n\n\nOutput\n\n    species    sex bill_length_mm bill_depth_mm  mass\n     &lt;fctr&gt; &lt;fctr&gt;          &lt;num&gt;         &lt;num&gt; &lt;int&gt;\n 1:  Adelie   male           39.1          18.7  3750\n 2:  Adelie female           39.5          16.7  1625\n 3:  Adelie female           35.7          16.9  1575\n 4:  Adelie female           35.7          18.0  1775\n 5:  Adelie female           36.2          17.2  1575\n 6:  Adelie female           36.0          17.1  1850\n 7:  Gentoo female           48.2          14.3  2300\n 8:  Gentoo female           43.2          14.5  2225\n 9:  Gentoo female           47.5          14.0  2437\n10:  Gentoo female           47.2          13.7  2462"
  },
  {
    "objectID": "data-wrangling/base-vs-tidyverse/index.html#update-specific-cells-in-a-column-with-multiple-cases",
    "href": "data-wrangling/base-vs-tidyverse/index.html#update-specific-cells-in-a-column-with-multiple-cases",
    "title": "Base R and Tidyverse syntax comparison for data wrangling",
    "section": "2.15 Update specific cells in a column with multiple cases",
    "text": "2.15 Update specific cells in a column with multiple cases\nCreate a new column size based on the following conditions: if sex is female and mass is greater than 4000, then size is large, if sex is male and mass is greater than 4100, then size is large, otherwise size is small.\n\n\n\ndf$size &lt;- ifelse(df$sex == \"female\" & df$mass &gt; 4000,\n                  \"large\",\n                  ifelse(df$sex == \"male\" & df$mass &gt; 4100, \n                         \"large\", \n                         \"small\"))\ndf                \nOutput\n\n   species    sex bill_length_mm bill_depth_mm mass  size\n1   Adelie   male           39.1          18.7 3750 small\n2   Adelie female           39.5          16.7 3250 small\n3   Adelie female           35.7          16.9 3150 small\n4   Adelie female           35.7          18.0 3550 small\n5   Adelie female           36.2          17.2 3150 small\n6   Adelie female           36.0          17.1 3700 small\n7   Gentoo female           48.2          14.3 4600 large\n8   Gentoo female           43.2          14.5 4450 large\n9   Gentoo female           47.5          14.0 4875 large\n10  Gentoo female           47.2          13.7 4925 large\n\n\n\n\n\nmutate(tbl, \n       size = case_when(sex == \"female\" & mass &gt; 4000 ~ \"large\",\n                        sex == \"male\" & mass &gt; 4100 ~ \"large\",\n                        .default = \"small\"))\nOutput\n\n# A tibble: 10 × 6\n   species sex    bill_length_mm bill_depth_mm  mass size \n   &lt;fct&gt;   &lt;fct&gt;           &lt;dbl&gt;         &lt;dbl&gt; &lt;int&gt; &lt;chr&gt;\n 1 Adelie  male             39.1          18.7  3750 small\n 2 Adelie  female           39.5          16.7  3250 small\n 3 Adelie  female           35.7          16.9  3150 small\n 4 Adelie  female           35.7          18    3550 small\n 5 Adelie  female           36.2          17.2  3150 small\n 6 Adelie  female           36            17.1  3700 small\n 7 Gentoo  female           48.2          14.3  4600 large\n 8 Gentoo  female           43.2          14.5  4450 large\n 9 Gentoo  female           47.5          14    4875 large\n10 Gentoo  female           47.2          13.7  4925 large\n\n\n\n\n\n\n\n\ndt[, size := \"small\"]\ndt[sex == \"female\" & mass &gt; 4000, size := \"large\"]\ndt[sex == \"male\" & mass &gt; 4100, size := \"large\"][]\nOutput\n\n    species    sex bill_length_mm bill_depth_mm  mass   size\n     &lt;fctr&gt; &lt;fctr&gt;          &lt;num&gt;         &lt;num&gt; &lt;int&gt; &lt;char&gt;\n 1:  Adelie   male           39.1          18.7  3750  small\n 2:  Adelie female           39.5          16.7  3250  small\n 3:  Adelie female           35.7          16.9  3150  small\n 4:  Adelie female           35.7          18.0  3550  small\n 5:  Adelie female           36.2          17.2  3150  small\n 6:  Adelie female           36.0          17.1  3700  small\n 7:  Gentoo female           48.2          14.3  4600  large\n 8:  Gentoo female           43.2          14.5  4450  large\n 9:  Gentoo female           47.5          14.0  4875  large\n10:  Gentoo female           47.2          13.7  4925  large"
  },
  {
    "objectID": "data-wrangling/base-vs-tidyverse/index.html#merge-or-join-two-tabular-data",
    "href": "data-wrangling/base-vs-tidyverse/index.html#merge-or-join-two-tabular-data",
    "title": "Base R and Tidyverse syntax comparison for data wrangling",
    "section": "2.16 Merge or join two tabular data",
    "text": "2.16 Merge or join two tabular data\nWe create a second data frame df2 and tibble tbl2 that contains the sex, species, and name columns.\n\ndf2 &lt;- data.frame(sex = c(\"female\", \"male\",  \"female\", \"male\"),\n                  species = c(\"Adelie\", \"Adelie\", \"Chinstrap\", \"Chinstrap\"),\n                  name = c(\"A\", \"B\", \"C\", \"D\"))\ntbl2 &lt;- as_tibble(df2)\n\n\n\nWe also create a second data table dt2 that contains the sex, species, and name columns.\n\ndt2 &lt;- as.data.table(df2)\n\n\n2.16.1 Left join\nLeft join df and df2 by species and sex.\n\n\n\nmerge(df, df2, by = c(\"species\", \"sex\"),\n      all.x = TRUE)        \nOutput\n\n   species    sex bill_length_mm bill_depth_mm mass name\n1   Adelie female           39.5          16.7 3250    A\n2   Adelie female           35.7          16.9 3150    A\n3   Adelie female           35.7          18.0 3550    A\n4   Adelie female           36.2          17.2 3150    A\n5   Adelie female           36.0          17.1 3700    A\n6   Adelie   male           39.1          18.7 3750    B\n7   Gentoo female           47.5          14.0 4875 &lt;NA&gt;\n8   Gentoo female           47.2          13.7 4925 &lt;NA&gt;\n9   Gentoo female           48.2          14.3 4600 &lt;NA&gt;\n10  Gentoo female           43.2          14.5 4450 &lt;NA&gt;\n\n\n\n\n\nleft_join(df, df2, join_by(species, sex))  \nOutput\n\n   species    sex bill_length_mm bill_depth_mm mass name\n1   Adelie   male           39.1          18.7 3750    B\n2   Adelie female           39.5          16.7 3250    A\n3   Adelie female           35.7          16.9 3150    A\n4   Adelie female           35.7          18.0 3550    A\n5   Adelie female           36.2          17.2 3150    A\n6   Adelie female           36.0          17.1 3700    A\n7   Gentoo female           48.2          14.3 4600 &lt;NA&gt;\n8   Gentoo female           43.2          14.5 4450 &lt;NA&gt;\n9   Gentoo female           47.5          14.0 4875 &lt;NA&gt;\n10  Gentoo female           47.2          13.7 4925 &lt;NA&gt;\n\n\n\n\n\n\n\n\nmerge(dt, dt2, by = c(\"species\", \"sex\"),\n      all.x = TRUE) \nOutput\n\nKey: &lt;species, sex&gt;\n    species    sex bill_length_mm bill_depth_mm  mass   name\n     &lt;char&gt; &lt;char&gt;          &lt;num&gt;         &lt;num&gt; &lt;int&gt; &lt;char&gt;\n 1:  Adelie female           39.5          16.7  3250      A\n 2:  Adelie female           35.7          16.9  3150      A\n 3:  Adelie female           35.7          18.0  3550      A\n 4:  Adelie female           36.2          17.2  3150      A\n 5:  Adelie female           36.0          17.1  3700      A\n 6:  Adelie   male           39.1          18.7  3750      B\n 7:  Gentoo female           48.2          14.3  4600   &lt;NA&gt;\n 8:  Gentoo female           43.2          14.5  4450   &lt;NA&gt;\n 9:  Gentoo female           47.5          14.0  4875   &lt;NA&gt;\n10:  Gentoo female           47.2          13.7  4925   &lt;NA&gt;\n\n\n\n\n\n2.16.2 Right join\nRight join df and df2 by species and sex.\n\n\n\nmerge(df, df2, by = c(\"species\", \"sex\"),\n      all.y = TRUE)              \nOutput\n\n    species    sex bill_length_mm bill_depth_mm mass name\n1    Adelie female           39.5          16.7 3250    A\n2    Adelie female           35.7          16.9 3150    A\n3    Adelie female           35.7          18.0 3550    A\n4    Adelie female           36.2          17.2 3150    A\n5    Adelie female           36.0          17.1 3700    A\n6    Adelie   male           39.1          18.7 3750    B\n7 Chinstrap female             NA            NA   NA    C\n8 Chinstrap   male             NA            NA   NA    D\n\n\n\n\n\nright_join(df, df2, join_by(species, sex)) \nOutput\n\n    species    sex bill_length_mm bill_depth_mm mass name\n1    Adelie   male           39.1          18.7 3750    B\n2    Adelie female           39.5          16.7 3250    A\n3    Adelie female           35.7          16.9 3150    A\n4    Adelie female           35.7          18.0 3550    A\n5    Adelie female           36.2          17.2 3150    A\n6    Adelie female           36.0          17.1 3700    A\n7 Chinstrap female             NA            NA   NA    C\n8 Chinstrap   male             NA            NA   NA    D\n\n\n\n\n\n\n\n\nmerge(dt, dt2, by = c(\"species\", \"sex\"),\n      all.y = TRUE)\nOutput\n\nKey: &lt;species, sex&gt;\n     species    sex bill_length_mm bill_depth_mm  mass   name\n      &lt;char&gt; &lt;char&gt;          &lt;num&gt;         &lt;num&gt; &lt;int&gt; &lt;char&gt;\n1:    Adelie female           39.5          16.7  3250      A\n2:    Adelie female           35.7          16.9  3150      A\n3:    Adelie female           35.7          18.0  3550      A\n4:    Adelie female           36.2          17.2  3150      A\n5:    Adelie female           36.0          17.1  3700      A\n6:    Adelie   male           39.1          18.7  3750      B\n7: Chinstrap female             NA            NA    NA      C\n8: Chinstrap   male             NA            NA    NA      D\n\n\n\n\n\n2.16.3 Full join\nFull join df and df2 by species and sex.\n\n\n\nmerge(df, df2, by = c(\"species\", \"sex\"),\n      all = TRUE)              \nOutput\n\n     species    sex bill_length_mm bill_depth_mm mass name\n1     Adelie female           39.5          16.7 3250    A\n2     Adelie female           35.7          16.9 3150    A\n3     Adelie female           35.7          18.0 3550    A\n4     Adelie female           36.2          17.2 3150    A\n5     Adelie female           36.0          17.1 3700    A\n6     Adelie   male           39.1          18.7 3750    B\n7  Chinstrap female             NA            NA   NA    C\n8  Chinstrap   male             NA            NA   NA    D\n9     Gentoo female           47.5          14.0 4875 &lt;NA&gt;\n10    Gentoo female           47.2          13.7 4925 &lt;NA&gt;\n11    Gentoo female           48.2          14.3 4600 &lt;NA&gt;\n12    Gentoo female           43.2          14.5 4450 &lt;NA&gt;\n\n\n\n\n\nfull_join(df, df2, join_by(species, sex)) \nOutput\n\n     species    sex bill_length_mm bill_depth_mm mass name\n1     Adelie   male           39.1          18.7 3750    B\n2     Adelie female           39.5          16.7 3250    A\n3     Adelie female           35.7          16.9 3150    A\n4     Adelie female           35.7          18.0 3550    A\n5     Adelie female           36.2          17.2 3150    A\n6     Adelie female           36.0          17.1 3700    A\n7     Gentoo female           48.2          14.3 4600 &lt;NA&gt;\n8     Gentoo female           43.2          14.5 4450 &lt;NA&gt;\n9     Gentoo female           47.5          14.0 4875 &lt;NA&gt;\n10    Gentoo female           47.2          13.7 4925 &lt;NA&gt;\n11 Chinstrap female             NA            NA   NA    C\n12 Chinstrap   male             NA            NA   NA    D\n\n\n\n\n\n\n\n\nmerge(dt, dt2, by = c(\"species\", \"sex\"),\n      all = TRUE)\nOutput\n\nKey: &lt;species, sex&gt;\n      species    sex bill_length_mm bill_depth_mm  mass   name\n       &lt;char&gt; &lt;char&gt;          &lt;num&gt;         &lt;num&gt; &lt;int&gt; &lt;char&gt;\n 1:    Adelie female           39.5          16.7  3250      A\n 2:    Adelie female           35.7          16.9  3150      A\n 3:    Adelie female           35.7          18.0  3550      A\n 4:    Adelie female           36.2          17.2  3150      A\n 5:    Adelie female           36.0          17.1  3700      A\n 6:    Adelie   male           39.1          18.7  3750      B\n 7: Chinstrap female             NA            NA    NA      C\n 8: Chinstrap   male             NA            NA    NA      D\n 9:    Gentoo female           48.2          14.3  4600   &lt;NA&gt;\n10:    Gentoo female           43.2          14.5  4450   &lt;NA&gt;\n11:    Gentoo female           47.5          14.0  4875   &lt;NA&gt;\n12:    Gentoo female           47.2          13.7  4925   &lt;NA&gt;\n\n\n\n\n\n2.16.4 Inner join\nInner join df and df2 by species and sex.\n\n\n\nmerge(df, df2, by = c(\"species\", \"sex\"))              \nOutput\n\n  species    sex bill_length_mm bill_depth_mm mass name\n1  Adelie female           39.5          16.7 3250    A\n2  Adelie female           35.7          16.9 3150    A\n3  Adelie female           35.7          18.0 3550    A\n4  Adelie female           36.2          17.2 3150    A\n5  Adelie female           36.0          17.1 3700    A\n6  Adelie   male           39.1          18.7 3750    B\n\n\n\n\n\ninner_join(df, df2, join_by(species, sex)) \nOutput\n\n  species    sex bill_length_mm bill_depth_mm mass name\n1  Adelie   male           39.1          18.7 3750    B\n2  Adelie female           39.5          16.7 3250    A\n3  Adelie female           35.7          16.9 3150    A\n4  Adelie female           35.7          18.0 3550    A\n5  Adelie female           36.2          17.2 3150    A\n6  Adelie female           36.0          17.1 3700    A\n\n\n\n\n\n\n\n\nmerge(dt, dt2, by = c(\"species\", \"sex\"))\nOutput\n\nKey: &lt;species, sex&gt;\n   species    sex bill_length_mm bill_depth_mm  mass   name\n    &lt;char&gt; &lt;char&gt;          &lt;num&gt;         &lt;num&gt; &lt;int&gt; &lt;char&gt;\n1:  Adelie female           39.5          16.7  3250      A\n2:  Adelie female           35.7          16.9  3150      A\n3:  Adelie female           35.7          18.0  3550      A\n4:  Adelie female           36.2          17.2  3150      A\n5:  Adelie female           36.0          17.1  3700      A\n6:  Adelie   male           39.1          18.7  3750      B\n\n\n\n\n\n2.16.5 Cross join\nCross join df and df2.\n\n\n\nmerge(df, df2, by = NULL)              \nOutput\n\n   species.x  sex.x bill_length_mm bill_depth_mm mass  sex.y species.y name\n1     Adelie   male           39.1          18.7 3750 female    Adelie    A\n2     Adelie female           39.5          16.7 3250 female    Adelie    A\n3     Adelie female           35.7          16.9 3150 female    Adelie    A\n4     Adelie female           35.7          18.0 3550 female    Adelie    A\n5     Adelie female           36.2          17.2 3150 female    Adelie    A\n6     Adelie female           36.0          17.1 3700 female    Adelie    A\n7     Gentoo female           48.2          14.3 4600 female    Adelie    A\n8     Gentoo female           43.2          14.5 4450 female    Adelie    A\n9     Gentoo female           47.5          14.0 4875 female    Adelie    A\n10    Gentoo female           47.2          13.7 4925 female    Adelie    A\n11    Adelie   male           39.1          18.7 3750   male    Adelie    B\n12    Adelie female           39.5          16.7 3250   male    Adelie    B\n13    Adelie female           35.7          16.9 3150   male    Adelie    B\n14    Adelie female           35.7          18.0 3550   male    Adelie    B\n15    Adelie female           36.2          17.2 3150   male    Adelie    B\n16    Adelie female           36.0          17.1 3700   male    Adelie    B\n17    Gentoo female           48.2          14.3 4600   male    Adelie    B\n18    Gentoo female           43.2          14.5 4450   male    Adelie    B\n19    Gentoo female           47.5          14.0 4875   male    Adelie    B\n20    Gentoo female           47.2          13.7 4925   male    Adelie    B\n21    Adelie   male           39.1          18.7 3750 female Chinstrap    C\n22    Adelie female           39.5          16.7 3250 female Chinstrap    C\n23    Adelie female           35.7          16.9 3150 female Chinstrap    C\n24    Adelie female           35.7          18.0 3550 female Chinstrap    C\n25    Adelie female           36.2          17.2 3150 female Chinstrap    C\n26    Adelie female           36.0          17.1 3700 female Chinstrap    C\n27    Gentoo female           48.2          14.3 4600 female Chinstrap    C\n28    Gentoo female           43.2          14.5 4450 female Chinstrap    C\n29    Gentoo female           47.5          14.0 4875 female Chinstrap    C\n30    Gentoo female           47.2          13.7 4925 female Chinstrap    C\n31    Adelie   male           39.1          18.7 3750   male Chinstrap    D\n32    Adelie female           39.5          16.7 3250   male Chinstrap    D\n33    Adelie female           35.7          16.9 3150   male Chinstrap    D\n34    Adelie female           35.7          18.0 3550   male Chinstrap    D\n35    Adelie female           36.2          17.2 3150   male Chinstrap    D\n36    Adelie female           36.0          17.1 3700   male Chinstrap    D\n37    Gentoo female           48.2          14.3 4600   male Chinstrap    D\n38    Gentoo female           43.2          14.5 4450   male Chinstrap    D\n39    Gentoo female           47.5          14.0 4875   male Chinstrap    D\n40    Gentoo female           47.2          13.7 4925   male Chinstrap    D\n\n\n\n\n\ncross_join(df, df2) \nOutput\n\n   species.x  sex.x bill_length_mm bill_depth_mm mass  sex.y species.y name\n1     Adelie   male           39.1          18.7 3750 female    Adelie    A\n2     Adelie   male           39.1          18.7 3750   male    Adelie    B\n3     Adelie   male           39.1          18.7 3750 female Chinstrap    C\n4     Adelie   male           39.1          18.7 3750   male Chinstrap    D\n5     Adelie female           39.5          16.7 3250 female    Adelie    A\n6     Adelie female           39.5          16.7 3250   male    Adelie    B\n7     Adelie female           39.5          16.7 3250 female Chinstrap    C\n8     Adelie female           39.5          16.7 3250   male Chinstrap    D\n9     Adelie female           35.7          16.9 3150 female    Adelie    A\n10    Adelie female           35.7          16.9 3150   male    Adelie    B\n11    Adelie female           35.7          16.9 3150 female Chinstrap    C\n12    Adelie female           35.7          16.9 3150   male Chinstrap    D\n13    Adelie female           35.7          18.0 3550 female    Adelie    A\n14    Adelie female           35.7          18.0 3550   male    Adelie    B\n15    Adelie female           35.7          18.0 3550 female Chinstrap    C\n16    Adelie female           35.7          18.0 3550   male Chinstrap    D\n17    Adelie female           36.2          17.2 3150 female    Adelie    A\n18    Adelie female           36.2          17.2 3150   male    Adelie    B\n19    Adelie female           36.2          17.2 3150 female Chinstrap    C\n20    Adelie female           36.2          17.2 3150   male Chinstrap    D\n21    Adelie female           36.0          17.1 3700 female    Adelie    A\n22    Adelie female           36.0          17.1 3700   male    Adelie    B\n23    Adelie female           36.0          17.1 3700 female Chinstrap    C\n24    Adelie female           36.0          17.1 3700   male Chinstrap    D\n25    Gentoo female           48.2          14.3 4600 female    Adelie    A\n26    Gentoo female           48.2          14.3 4600   male    Adelie    B\n27    Gentoo female           48.2          14.3 4600 female Chinstrap    C\n28    Gentoo female           48.2          14.3 4600   male Chinstrap    D\n29    Gentoo female           43.2          14.5 4450 female    Adelie    A\n30    Gentoo female           43.2          14.5 4450   male    Adelie    B\n31    Gentoo female           43.2          14.5 4450 female Chinstrap    C\n32    Gentoo female           43.2          14.5 4450   male Chinstrap    D\n33    Gentoo female           47.5          14.0 4875 female    Adelie    A\n34    Gentoo female           47.5          14.0 4875   male    Adelie    B\n35    Gentoo female           47.5          14.0 4875 female Chinstrap    C\n36    Gentoo female           47.5          14.0 4875   male Chinstrap    D\n37    Gentoo female           47.2          13.7 4925 female    Adelie    A\n38    Gentoo female           47.2          13.7 4925   male    Adelie    B\n39    Gentoo female           47.2          13.7 4925 female Chinstrap    C\n40    Gentoo female           47.2          13.7 4925   male Chinstrap    D\n\n\n\n\n\n\n\n\nmerge(dt, dt2, by = NULL)\nOutput\n\nKey: &lt;species, sex&gt;\n   species    sex bill_length_mm bill_depth_mm  mass   name\n    &lt;char&gt; &lt;char&gt;          &lt;num&gt;         &lt;num&gt; &lt;int&gt; &lt;char&gt;\n1:  Adelie female           39.5          16.7  3250      A\n2:  Adelie female           35.7          16.9  3150      A\n3:  Adelie female           35.7          18.0  3550      A\n4:  Adelie female           36.2          17.2  3150      A\n5:  Adelie female           36.0          17.1  3700      A\n6:  Adelie   male           39.1          18.7  3750      B\n\n\n\n\n\n2.16.6 Anti join\nAnti join df and df2 by species and sex.\n\n\n\ndf[!(df$sex %in% df2$sex & df$species %in% df2$species), ]        \nOutput\n\n   species    sex bill_length_mm bill_depth_mm mass\n7   Gentoo female           48.2          14.3 4600\n8   Gentoo female           43.2          14.5 4450\n9   Gentoo female           47.5          14.0 4875\n10  Gentoo female           47.2          13.7 4925\n\n\n\n\n\nanti_join(df, df2, join_by(sex, species)) \nOutput\n\n  species    sex bill_length_mm bill_depth_mm mass\n1  Gentoo female           48.2          14.3 4600\n2  Gentoo female           43.2          14.5 4450\n3  Gentoo female           47.5          14.0 4875\n4  Gentoo female           47.2          13.7 4925\n\n\n\n\n\n\n\n\nsetDT(dt)[!dt2, on = c(\"sex\", \"species\")]\nOutput\n\n   species    sex bill_length_mm bill_depth_mm  mass\n    &lt;fctr&gt; &lt;fctr&gt;          &lt;num&gt;         &lt;num&gt; &lt;int&gt;\n1:  Gentoo female           48.2          14.3  4600\n2:  Gentoo female           43.2          14.5  4450\n3:  Gentoo female           47.5          14.0  4875\n4:  Gentoo female           47.2          13.7  4925\n\n\n\n\n\n2.16.7 Bind columns\nBind the first two columns of df and the third and fourth columns of df.\n\n\n\ncbind(df[1:2], df[3:4])\nOutput\n\n   species    sex bill_length_mm bill_depth_mm\n1   Adelie   male           39.1          18.7\n2   Adelie female           39.5          16.7\n3   Adelie female           35.7          16.9\n4   Adelie female           35.7          18.0\n5   Adelie female           36.2          17.2\n6   Adelie female           36.0          17.1\n7   Gentoo female           48.2          14.3\n8   Gentoo female           43.2          14.5\n9   Gentoo female           47.5          14.0\n10  Gentoo female           47.2          13.7\n\n\n\n\n\nbind_cols(df[1:2], df[3:4])\nOutput\n\n   species    sex bill_length_mm bill_depth_mm\n1   Adelie   male           39.1          18.7\n2   Adelie female           39.5          16.7\n3   Adelie female           35.7          16.9\n4   Adelie female           35.7          18.0\n5   Adelie female           36.2          17.2\n6   Adelie female           36.0          17.1\n7   Gentoo female           48.2          14.3\n8   Gentoo female           43.2          14.5\n9   Gentoo female           47.5          14.0\n10  Gentoo female           47.2          13.7\n\n\n\n\n\n\n\n\nsetDT(c(dt[, 1:2], dt[, 3:4]))\n\n\n\n2.16.8 Bind rows\nBind df and df2 by rows.\n\n\n\ndf2[setdiff(names(df), names(df2))] &lt;- NA\ndf[setdiff(names(df2), names(df))] &lt;- NA\nrbind(df, df2)\nOutput\n\n     species    sex bill_length_mm bill_depth_mm mass name\n1     Adelie   male           39.1          18.7 3750 &lt;NA&gt;\n2     Adelie female           39.5          16.7 3250 &lt;NA&gt;\n3     Adelie female           35.7          16.9 3150 &lt;NA&gt;\n4     Adelie female           35.7          18.0 3550 &lt;NA&gt;\n5     Adelie female           36.2          17.2 3150 &lt;NA&gt;\n6     Adelie female           36.0          17.1 3700 &lt;NA&gt;\n7     Gentoo female           48.2          14.3 4600 &lt;NA&gt;\n8     Gentoo female           43.2          14.5 4450 &lt;NA&gt;\n9     Gentoo female           47.5          14.0 4875 &lt;NA&gt;\n10    Gentoo female           47.2          13.7 4925 &lt;NA&gt;\n11    Adelie female             NA            NA   NA    A\n12    Adelie   male             NA            NA   NA    B\n13 Chinstrap female             NA            NA   NA    C\n14 Chinstrap   male             NA            NA   NA    D\n\n\n\n\n\nbind_rows(tbl, tbl2)\nOutput\n\n# A tibble: 14 × 6\n   species   sex    bill_length_mm bill_depth_mm  mass name \n   &lt;chr&gt;     &lt;chr&gt;           &lt;dbl&gt;         &lt;dbl&gt; &lt;int&gt; &lt;chr&gt;\n 1 Adelie    male             39.1          18.7  3750 &lt;NA&gt; \n 2 Adelie    female           39.5          16.7  3250 &lt;NA&gt; \n 3 Adelie    female           35.7          16.9  3150 &lt;NA&gt; \n 4 Adelie    female           35.7          18    3550 &lt;NA&gt; \n 5 Adelie    female           36.2          17.2  3150 &lt;NA&gt; \n 6 Adelie    female           36            17.1  3700 &lt;NA&gt; \n 7 Gentoo    female           48.2          14.3  4600 &lt;NA&gt; \n 8 Gentoo    female           43.2          14.5  4450 &lt;NA&gt; \n 9 Gentoo    female           47.5          14    4875 &lt;NA&gt; \n10 Gentoo    female           47.2          13.7  4925 &lt;NA&gt; \n11 Adelie    female           NA            NA      NA A    \n12 Adelie    male             NA            NA      NA B    \n13 Chinstrap female           NA            NA      NA C    \n14 Chinstrap male             NA            NA      NA D    \n\n\n\n\n\n\n\n\nrbindlist(list(dt, dt2), \n          fill = TRUE)\nOutput\n\n      species    sex bill_length_mm bill_depth_mm  mass   name\n       &lt;fctr&gt; &lt;fctr&gt;          &lt;num&gt;         &lt;num&gt; &lt;int&gt; &lt;char&gt;\n 1:    Adelie   male           39.1          18.7  3750   &lt;NA&gt;\n 2:    Adelie female           39.5          16.7  3250   &lt;NA&gt;\n 3:    Adelie female           35.7          16.9  3150   &lt;NA&gt;\n 4:    Adelie female           35.7          18.0  3550   &lt;NA&gt;\n 5:    Adelie female           36.2          17.2  3150   &lt;NA&gt;\n 6:    Adelie female           36.0          17.1  3700   &lt;NA&gt;\n 7:    Gentoo female           48.2          14.3  4600   &lt;NA&gt;\n 8:    Gentoo female           43.2          14.5  4450   &lt;NA&gt;\n 9:    Gentoo female           47.5          14.0  4875   &lt;NA&gt;\n10:    Gentoo female           47.2          13.7  4925   &lt;NA&gt;\n11:    Adelie female             NA            NA    NA      A\n12:    Adelie   male             NA            NA    NA      B\n13: Chinstrap female             NA            NA    NA      C\n14: Chinstrap   male             NA            NA    NA      D"
  },
  {
    "objectID": "data-wrangling/base-vs-tidyverse/index.html#reshape-data-to-longer-format",
    "href": "data-wrangling/base-vs-tidyverse/index.html#reshape-data-to-longer-format",
    "title": "Base R and Tidyverse syntax comparison for data wrangling",
    "section": "2.17 Reshape data to longer format",
    "text": "2.17 Reshape data to longer format\nReshape the df data frame to a longer format where the bill_length_mm and bill_depth_mm columns are stacked into a single column named bill and a new column named type is created to indicate the type of measurement.\n\n\n\nreshape(df, \n        varying = grep(\"^bill\", colnames(df)), \n        v.names = \"bill\", \n        direction = \"long\",\n        timevar = \"type\",\n        times = c(\"length\", \"depth\"))\nOutput\n\n          species    sex mass name   type bill id\n1.length   Adelie   male 3750   NA length 39.1  1\n2.length   Adelie female 3250   NA length 39.5  2\n3.length   Adelie female 3150   NA length 35.7  3\n4.length   Adelie female 3550   NA length 35.7  4\n5.length   Adelie female 3150   NA length 36.2  5\n6.length   Adelie female 3700   NA length 36.0  6\n7.length   Gentoo female 4600   NA length 48.2  7\n8.length   Gentoo female 4450   NA length 43.2  8\n9.length   Gentoo female 4875   NA length 47.5  9\n10.length  Gentoo female 4925   NA length 47.2 10\n1.depth    Adelie   male 3750   NA  depth 18.7  1\n2.depth    Adelie female 3250   NA  depth 16.7  2\n3.depth    Adelie female 3150   NA  depth 16.9  3\n4.depth    Adelie female 3550   NA  depth 18.0  4\n5.depth    Adelie female 3150   NA  depth 17.2  5\n6.depth    Adelie female 3700   NA  depth 17.1  6\n7.depth    Gentoo female 4600   NA  depth 14.3  7\n8.depth    Gentoo female 4450   NA  depth 14.5  8\n9.depth    Gentoo female 4875   NA  depth 14.0  9\n10.depth   Gentoo female 4925   NA  depth 13.7 10\n\n\n\n\n\npivot_longer(tbl, cols = starts_with(\"bill\"), names_to = \"type\", names_pattern = \"bill_(.+)_mm\")\nOutput\n\n# A tibble: 20 × 5\n   species sex     mass type   value\n   &lt;fct&gt;   &lt;fct&gt;  &lt;int&gt; &lt;chr&gt;  &lt;dbl&gt;\n 1 Adelie  male    3750 length  39.1\n 2 Adelie  male    3750 depth   18.7\n 3 Adelie  female  3250 length  39.5\n 4 Adelie  female  3250 depth   16.7\n 5 Adelie  female  3150 length  35.7\n 6 Adelie  female  3150 depth   16.9\n 7 Adelie  female  3550 length  35.7\n 8 Adelie  female  3550 depth   18  \n 9 Adelie  female  3150 length  36.2\n10 Adelie  female  3150 depth   17.2\n11 Adelie  female  3700 length  36  \n12 Adelie  female  3700 depth   17.1\n13 Gentoo  female  4600 length  48.2\n14 Gentoo  female  4600 depth   14.3\n15 Gentoo  female  4450 length  43.2\n16 Gentoo  female  4450 depth   14.5\n17 Gentoo  female  4875 length  47.5\n18 Gentoo  female  4875 depth   14  \n19 Gentoo  female  4925 length  47.2\n20 Gentoo  female  4925 depth   13.7\n\n\n\n\n\n\n\n\nmelt(dt, \n     measure.vars = grep(\"^bill\", colnames(dt)), \n     variable.name = \"type\",\n     value.name = \"bill\")[\n       , type := sub(\"^bill_\", \"\", type)][\n       , type := sub(\"_mm$\", \"\", type)][]\nOutput\n\n    species    sex  mass   type  bill\n     &lt;fctr&gt; &lt;fctr&gt; &lt;int&gt; &lt;char&gt; &lt;num&gt;\n 1:  Adelie   male  3750 length  39.1\n 2:  Adelie female  3250 length  39.5\n 3:  Adelie female  3150 length  35.7\n 4:  Adelie female  3550 length  35.7\n 5:  Adelie female  3150 length  36.2\n 6:  Adelie female  3700 length  36.0\n 7:  Gentoo female  4600 length  48.2\n 8:  Gentoo female  4450 length  43.2\n 9:  Gentoo female  4875 length  47.5\n10:  Gentoo female  4925 length  47.2\n11:  Adelie   male  3750  depth  18.7\n12:  Adelie female  3250  depth  16.7\n13:  Adelie female  3150  depth  16.9\n14:  Adelie female  3550  depth  18.0\n15:  Adelie female  3150  depth  17.2\n16:  Adelie female  3700  depth  17.1\n17:  Gentoo female  4600  depth  14.3\n18:  Gentoo female  4450  depth  14.5\n19:  Gentoo female  4875  depth  14.0\n20:  Gentoo female  4925  depth  13.7\n    species    sex  mass   type  bill"
  },
  {
    "objectID": "data-wrangling/base-vs-tidyverse/index.html#reshape-data-to-wider-format",
    "href": "data-wrangling/base-vs-tidyverse/index.html#reshape-data-to-wider-format",
    "title": "Base R and Tidyverse syntax comparison for data wrangling",
    "section": "2.18 Reshape data to wider format",
    "text": "2.18 Reshape data to wider format\nReshape the first two rows of df data frame to a wider format where the sex column is used as the id variable and the species column is used as the time variable.\n\n\n\nreshape(df[1:2, ],  \n        idvar = \"species\",\n        timevar = \"sex\",\n        direction = \"wide\")\nOutput\n\n  species bill_length_mm.male bill_depth_mm.male mass.male name.male\n1  Adelie                39.1               18.7      3750        NA\n  bill_length_mm.female bill_depth_mm.female mass.female name.female\n1                  39.5                 16.7        3250          NA\n\n\n\n\n\npivot_wider(tbl[1:2, ],\n            names_from = sex, \n            values_from = -c(sex, species))\nOutput\n\n# A tibble: 1 × 7\n  species bill_length_mm_male bill_length_mm_female bill_depth_mm_male\n  &lt;fct&gt;                 &lt;dbl&gt;                 &lt;dbl&gt;              &lt;dbl&gt;\n1 Adelie                 39.1                  39.5               18.7\n# ℹ 3 more variables: bill_depth_mm_female &lt;dbl&gt;, mass_male &lt;int&gt;,\n#   mass_female &lt;int&gt;\n\n\n\n\n\n\n\n\ndcast(dt[1:2, ], \n      species ~ sex, \n      value.var = setdiff(colnames(dt), c(\"sex\", \"species\")))\nOutput\n\nKey: &lt;species&gt;\n   species bill_length_mm_female bill_length_mm_male bill_depth_mm_female\n    &lt;fctr&gt;                 &lt;num&gt;               &lt;num&gt;                &lt;num&gt;\n1:  Adelie                  39.5                39.1                 16.7\n   bill_depth_mm_male mass_female mass_male\n                &lt;num&gt;       &lt;int&gt;     &lt;int&gt;\n1:               18.7        3250      3750"
  },
  {
    "objectID": "data-wrangling/base-vs-tidyverse/index.html#detect-a-pattern",
    "href": "data-wrangling/base-vs-tidyverse/index.html#detect-a-pattern",
    "title": "Base R and Tidyverse syntax comparison for data wrangling",
    "section": "3.1 Detect a pattern",
    "text": "3.1 Detect a pattern\n\n3.1.1 Presence/absence of a pattern\n\n\n\ngrepl(\"a\", x)\nOutput\n\n[1]  TRUE FALSE  TRUE\n\n\n\n\n\nstr_detect(x, \"a\")\nOutput\n\n[1]  TRUE FALSE  TRUE\n\n\n\n\n\n\n\n3.1.2 Match\n\n\n\nregmatches(x, m = regexec(\"a\", x))\nOutput\n\n[[1]]\n[1] \"a\"\n\n[[2]]\ncharacter(0)\n\n[[3]]\n[1] \"a\"\n\n\n\n\n\nstr_match(x, \"a\")\nOutput\n\n     [,1]\n[1,] \"a\" \n[2,] NA  \n[3,] \"a\" \n\n\n\n\n\n\n\n3.1.3 Locate (first occurence only)\n\n\n\nregexpr(\"a\", x)\nOutput\n\n[1]  2 -1  1\nattr(,\"match.length\")\n[1]  1 -1  1\nattr(,\"index.type\")\n[1] \"chars\"\nattr(,\"useBytes\")\n[1] TRUE\n\n\n\n\n\nstr_locate(x, \"a\")\nOutput\n\n     start end\n[1,]     2   2\n[2,]    NA  NA\n[3,]     1   1\n\n\n\n\n\n\n\n3.1.4 Locate (all occurences)\n\n\n\ngregexpr(\"a\", x)\nOutput\n\n[[1]]\n[1] 2 4 6\nattr(,\"match.length\")\n[1] 1 1 1\nattr(,\"index.type\")\n[1] \"chars\"\nattr(,\"useBytes\")\n[1] TRUE\n\n[[2]]\n[1] -1\nattr(,\"match.length\")\n[1] -1\nattr(,\"index.type\")\n[1] \"chars\"\nattr(,\"useBytes\")\n[1] TRUE\n\n[[3]]\n[1] 1\nattr(,\"match.length\")\n[1] 1\nattr(,\"index.type\")\n[1] \"chars\"\nattr(,\"useBytes\")\n[1] TRUE\n\n\n\n\n\nstr_locate_all(x, \"a\")\nOutput\n\n[[1]]\n     start end\n[1,]     2   2\n[2,]     4   4\n[3,]     6   6\n\n[[2]]\n     start end\n\n[[3]]\n     start end\n[1,]     1   1\n\n\n\n\n\n\n\n3.1.5 Which\n\n\n\ngrep(x, \"a\")\nOutput\n\nWarning in grep(x, \"a\"): argument 'pattern' has length &gt; 1 and only the first\nelement will be used\n\n\nOutput\n\ninteger(0)\n\n\n\n\n\nstr_which(x, \"a\")\nOutput\n\n[1] 1 3"
  },
  {
    "objectID": "data-wrangling/base-vs-tidyverse/index.html#subset-strings",
    "href": "data-wrangling/base-vs-tidyverse/index.html#subset-strings",
    "title": "Base R and Tidyverse syntax comparison for data wrangling",
    "section": "3.2 Subset strings",
    "text": "3.2 Subset strings\n\n3.2.1 Extract (first occurence only)\n\n\n\nregmatches(x, m = regexpr(\"an\", x))\nOutput\n\n[1] \"an\"\n\n\n\nNote that the above doesn’t not return any value for non-matching patterns.\n\n\nstr_extract(x, \"an\")\nOutput\n\n[1] \"an\" NA   NA  \n\n\n\n\n\n\n\n3.2.2 Extract (all occurences)\n\n\n\nregmatches(x, m = gregexpr(\"an\", x))\nOutput\n\n[[1]]\n[1] \"an\" \"an\"\n\n[[2]]\ncharacter(0)\n\n[[3]]\ncharacter(0)\n\n\n\n\n\nstr_extract_all(x, \"an\")\nOutput\n\n[[1]]\n[1] \"an\" \"an\"\n\n[[2]]\ncharacter(0)\n\n[[3]]\ncharacter(0)\n\n\n\n\n\n\n\n3.2.3 Subset string\n\n\n\nsubstr(x, 1, 2)\nOutput\n\n[1] \"Ba\" \" c\" \"ap\"\n\n\n\n\n\nstr_sub(x, 1, 2)\nOutput\n\n[1] \"Ba\" \" c\" \"ap\"\n\n\n\n\n\n\n\n3.2.4 Subset string vector\n\n\n\ngrep(x,\"a\", value = TRUE)\nOutput\n\nWarning in grep(x, \"a\", value = TRUE): argument 'pattern' has length &gt; 1 and\nonly the first element will be used\n\n\nOutput\n\ncharacter(0)\n\n\n\n\n\nstr_subset(x, \"a\")\nOutput\n\n[1] \"Banana\"  \"app le \""
  },
  {
    "objectID": "data-wrangling/base-vs-tidyverse/index.html#cleaning-strings",
    "href": "data-wrangling/base-vs-tidyverse/index.html#cleaning-strings",
    "title": "Base R and Tidyverse syntax comparison for data wrangling",
    "section": "3.3 Cleaning strings",
    "text": "3.3 Cleaning strings\n\n3.3.1 Length\n\n\n\nnchar(x)\nOutput\n\n[1] 6 8 7\n\n\n\n\n\nstr_length(x)\nOutput\n\n[1] 6 8 7\n\n\n\n\n\n\n\n3.3.2 Trim white spaces\n\n\n\ntrimws(x)\nOutput\n\n[1] \"Banana\" \"citrus\" \"app le\"\n\n\n\n\n\nstr_trim(x)\nOutput\n\n[1] \"Banana\" \"citrus\" \"app le\"\n\n\n\n\n\n\n\n3.3.3 Wrap\n\n\n\nstrwrap(x, 4)\nOutput\n\n[1] \"Banana\" \"citrus\" \"app\"    \"le\"    \n\n\n\n\n\nstr_wrap(x, 4)\nOutput\n\n[1] \"Banana\"  \"citrus\"  \"app\\nle\""
  },
  {
    "objectID": "data-wrangling/base-vs-tidyverse/index.html#transform-strings",
    "href": "data-wrangling/base-vs-tidyverse/index.html#transform-strings",
    "title": "Base R and Tidyverse syntax comparison for data wrangling",
    "section": "3.4 Transform strings",
    "text": "3.4 Transform strings\n\n3.4.1 Replace (first occurence only)\n\n\n\nsub(\"a\", \"e\", x)\nOutput\n\n[1] \"Benana\"   \" citrus \" \"epp le \" \n\n\n\n\n\nstr_replace(x, \"a\", \"e\")\nOutput\n\n[1] \"Benana\"   \" citrus \" \"epp le \" \n\n\n\n\n\n\n\n3.4.2 Replace (all occurences)\n\n\n\ngsub(\"a\", \"e\", x)\nOutput\n\n[1] \"Benene\"   \" citrus \" \"epp le \" \n\n\n\n\n\nstr_replace_all(x, \"a\", \"e\")\nOutput\n\n[1] \"Benene\"   \" citrus \" \"epp le \" \n\n\n\n\n\n\n\n3.4.3 Duplicate string\n\n\n\nstrrep(x, 2)\nOutput\n\n[1] \"BananaBanana\"     \" citrus  citrus \" \"app le app le \"  \n\n\n\n\n\nstr_dup(x, 2)\nOutput\n\n[1] \"BananaBanana\"     \" citrus  citrus \" \"app le app le \"  \n\n\n\n\n\n\n\n3.4.4 Transform to lower case\n\n\n\ntolower(x)\nOutput\n\n[1] \"banana\"   \" citrus \" \"app le \" \n\n\n\n\n\nstr_to_lower(x)\nOutput\n\n[1] \"banana\"   \" citrus \" \"app le \" \n\n\n\n\n\n\n\n3.4.5 Transform to upper case\n\n\n\ntoupper(x)\nOutput\n\n[1] \"BANANA\"   \" CITRUS \" \"APP LE \" \n\n\n\n\n\nstr_to_upper(x)\nOutput\n\n[1] \"BANANA\"   \" CITRUS \" \"APP LE \" \n\n\n\n\n\n\n\n3.4.6 Transform to title case\n\n\nNone.\n\n\nstr_to_title(x)\nOutput\n\n[1] \"Banana\"   \" Citrus \" \"App Le \""
  },
  {
    "objectID": "data-wrangling/base-vs-tidyverse/index.html#sort-strings",
    "href": "data-wrangling/base-vs-tidyverse/index.html#sort-strings",
    "title": "Base R and Tidyverse syntax comparison for data wrangling",
    "section": "3.5 Sort strings",
    "text": "3.5 Sort strings\n\n3.5.1 Order\n\n\n\norder(x)\nOutput\n\n[1] 2 3 1\n\n\n\n\n\nstr_order(x)\nOutput\n\n[1] 2 3 1\n\n\n\n\n\n\n\n3.5.2 Sort\n\n\n\nsort(x)\nOutput\n\n[1] \" citrus \" \"app le \"  \"Banana\"  \n\n\n\n\n\nstr_sort(x)\nOutput\n\n[1] \" citrus \" \"app le \"  \"Banana\""
  },
  {
    "objectID": "data-wrangling/base-vs-tidyverse/index.html#split",
    "href": "data-wrangling/base-vs-tidyverse/index.html#split",
    "title": "Base R and Tidyverse syntax comparison for data wrangling",
    "section": "3.6 Split",
    "text": "3.6 Split\n\n\n\nstrsplit(x, \"a\")\nOutput\n\n[[1]]\n[1] \"B\" \"n\" \"n\"\n\n[[2]]\n[1] \" citrus \"\n\n[[3]]\n[1] \"\"       \"pp le \"\n\n\n\n\n\nstr_split(x, \"a\")\nOutput\n\n[[1]]\n[1] \"B\" \"n\" \"n\" \"\" \n\n[[2]]\n[1] \" citrus \"\n\n[[3]]\n[1] \"\"       \"pp le \""
  },
  {
    "objectID": "data-wrangling/base-vs-tidyverse/index.html#anonymise-levels",
    "href": "data-wrangling/base-vs-tidyverse/index.html#anonymise-levels",
    "title": "Base R and Tidyverse syntax comparison for data wrangling",
    "section": "4.1 Anonymise levels",
    "text": "4.1 Anonymise levels\n\n\n\nnew_lvls &lt;- seq(nlevels(f))\nlevels(f) &lt;- sample(new_lvls)\nfactor(f, new_lvls)\nOutput\n\n[1] 1    3    1    2    &lt;NA&gt; 1    3   \nLevels: 1 2 3\n\n\n\n\n\nfct_anon(f)\nOutput\n\n[1] 2    1    2    3    &lt;NA&gt; 2    1   \nLevels: 1 2 3"
  },
  {
    "objectID": "data-wrangling/base-vs-tidyverse/index.html#concatenate",
    "href": "data-wrangling/base-vs-tidyverse/index.html#concatenate",
    "title": "Base R and Tidyverse syntax comparison for data wrangling",
    "section": "4.2 Concatenate",
    "text": "4.2 Concatenate\n\n\n\nc(f1, f2)\nOutput\n\n [1] C   D   D   C   E   E   1   101 009 009 12  12 \nLevels: C D E 009 1 101 12\n\n\n\n\n\nfct_c(f1, f2)\nOutput\n\n [1] C   D   D   C   E   E   1   101 009 009 12  12 \nLevels: C D E 009 1 101 12"
  },
  {
    "objectID": "data-wrangling/base-vs-tidyverse/index.html#collapse-levels",
    "href": "data-wrangling/base-vs-tidyverse/index.html#collapse-levels",
    "title": "Base R and Tidyverse syntax comparison for data wrangling",
    "section": "4.3 Collapse levels",
    "text": "4.3 Collapse levels\n\n\n\nlevels(f)[levels(f) %in% c(\"A\", \"B\")] &lt;- \"a\"\nf\nOutput\n\n[1] a    C    a    a    &lt;NA&gt; a    C   \nLevels: a C\n\n\n\n\n\nfct_collapse(f, a = c(\"A\", \"B\"))\nOutput\n\n[1] a    C    a    a    &lt;NA&gt; a    C   \nLevels: a C"
  },
  {
    "objectID": "data-wrangling/base-vs-tidyverse/index.html#counting-levels",
    "href": "data-wrangling/base-vs-tidyverse/index.html#counting-levels",
    "title": "Base R and Tidyverse syntax comparison for data wrangling",
    "section": "4.4 Counting levels",
    "text": "4.4 Counting levels\n\n\n\nas.data.frame(table(f))\nOutput\n\n  f Freq\n1 A    3\n2 B    1\n3 C    2\n\n\n\n\n\nfct_count(f)\nOutput\n\n# A tibble: 4 × 2\n  f         n\n  &lt;fct&gt; &lt;int&gt;\n1 A         3\n2 B         1\n3 C         2\n4 &lt;NA&gt;      1"
  },
  {
    "objectID": "data-wrangling/base-vs-tidyverse/index.html#crossing-levels",
    "href": "data-wrangling/base-vs-tidyverse/index.html#crossing-levels",
    "title": "Base R and Tidyverse syntax comparison for data wrangling",
    "section": "4.5 Crossing levels",
    "text": "4.5 Crossing levels\n\n\n\nfactor(paste(f1, f2, sep = \":\"))\nOutput\n\n[1] C:1   D:101 D:009 C:009 E:12  E:12 \nLevels: C:009 C:1 D:009 D:101 E:12\n\n\n\n\n\nfct_cross(f1, f2)\nOutput\n\n[1] C:1   D:101 D:009 C:009 E:12  E:12 \nLevels: C:009 D:009 C:1 D:101 E:12"
  },
  {
    "objectID": "data-wrangling/base-vs-tidyverse/index.html#drop-levels-not-in-data",
    "href": "data-wrangling/base-vs-tidyverse/index.html#drop-levels-not-in-data",
    "title": "Base R and Tidyverse syntax comparison for data wrangling",
    "section": "4.6 Drop levels not in data",
    "text": "4.6 Drop levels not in data\n\n\n\nfactor(f[-4])\nOutput\n\n[1] A    C    A    &lt;NA&gt; A    C   \nLevels: A C\n\n\n\n\n\nfct_drop(f[-4])\nOutput\n\n[1] A    C    A    &lt;NA&gt; A    C   \nLevels: A C"
  },
  {
    "objectID": "data-wrangling/base-vs-tidyverse/index.html#add-additional-levels",
    "href": "data-wrangling/base-vs-tidyverse/index.html#add-additional-levels",
    "title": "Base R and Tidyverse syntax comparison for data wrangling",
    "section": "4.7 Add additional levels",
    "text": "4.7 Add additional levels\n\n\n\nlevels(f) &lt;- c(levels(f), c(\"D\", \"E\"))\nf\nOutput\n\n[1] A    C    A    B    &lt;NA&gt; A    C   \nLevels: A B C D E\n\n\n\n\n\nfct_expand(f, c(\"D\", \"E\"))\nOutput\n\n[1] A    C    A    B    &lt;NA&gt; A    C   \nLevels: A B C D E"
  },
  {
    "objectID": "data-wrangling/base-vs-tidyverse/index.html#reorder-levels-by-frequency",
    "href": "data-wrangling/base-vs-tidyverse/index.html#reorder-levels-by-frequency",
    "title": "Base R and Tidyverse syntax comparison for data wrangling",
    "section": "4.8 Reorder levels by frequency",
    "text": "4.8 Reorder levels by frequency\n\n\n\nfactor(f, levels = rev(names(sort(table(f))))) \nOutput\n\n[1] A    C    A    B    &lt;NA&gt; A    C   \nLevels: A C B\n\n\n\n\n\nfct_infreq(f)\nOutput\n\n[1] A    C    A    B    &lt;NA&gt; A    C   \nLevels: A C B"
  },
  {
    "objectID": "data-wrangling/base-vs-tidyverse/index.html#reorder-levels-by-order-of-appearance-in-data",
    "href": "data-wrangling/base-vs-tidyverse/index.html#reorder-levels-by-order-of-appearance-in-data",
    "title": "Base R and Tidyverse syntax comparison for data wrangling",
    "section": "4.9 Reorder levels by order of appearance in data",
    "text": "4.9 Reorder levels by order of appearance in data\n\n\n\nfactor(f, levels = unique(f)) \nOutput\n\n[1] A    C    A    B    &lt;NA&gt; A    C   \nLevels: A C B\n\n\n\n\n\nfct_inorder(f)\nOutput\n\n[1] A    C    A    B    &lt;NA&gt; A    C   \nLevels: A C B"
  },
  {
    "objectID": "data-wrangling/base-vs-tidyverse/index.html#reorder-levels-by-numeric-order",
    "href": "data-wrangling/base-vs-tidyverse/index.html#reorder-levels-by-numeric-order",
    "title": "Base R and Tidyverse syntax comparison for data wrangling",
    "section": "4.10 Reorder levels by numeric order",
    "text": "4.10 Reorder levels by numeric order\n\n\n\nlvls &lt;- levels(f2)\nfactor(f2, \n       levels = lvls[order(as.numeric(lvls))]) \nOutput\n\n[1] 1   101 009 009 12  12 \nLevels: 1 009 12 101\n\n\n\n\n\nfct_inseq(f2)\nOutput\n\n[1] 1   101 009 009 12  12 \nLevels: 1 009 12 101"
  },
  {
    "objectID": "data-wrangling/base-vs-tidyverse/index.html#lump-levels",
    "href": "data-wrangling/base-vs-tidyverse/index.html#lump-levels",
    "title": "Base R and Tidyverse syntax comparison for data wrangling",
    "section": "4.11 Lump levels",
    "text": "4.11 Lump levels\n\n\n\nlvls &lt;- levels(f0)\ntt &lt;- sort(table(f0))\nlvls_order &lt;- names(rev(tt))\n\n\nlevels(f0)[lvls %in% setdiff(lvls, lvls_order[1:2])] &lt;- \"Other\"\nf0\nOutput\n\n  [1] Other Other Other Other Other Other Other Other Other Other Other Other\n [13] Other Other Other Other Other Other Other Other Other Other Other Other\n [25] Other Other Other Other Other Other Other Other Other Other Other Other\n [37] Other Other Other Other Other Other Other Other Other Other Other Other\n [49] Other Other Other Other Other Other Other Other Other Other Other Other\n [61] Other Other Other Other Other Other Other Other Other Other Other Other\n [73] Other Other Other Other Other Other Other Other Other Other Other Other\n [85] Other Other Other Other Other Other Other Other Other Other Other Other\n [97] Other Other Other Other Other Other Other Other Other Other Other Other\n[109] Other Other Other Other Other I     I     I     I     I     I     I    \n[121] I     I     I     I     I     I     I     I     I     I     I     I    \n[133] I     I     I     I     I     I     I     I     I     I     I     J    \n[145] J     J     J     J     J     J     J     J     J     J     J     J    \n[157] J     J     J     J     J     J     J     J     J     J     J     J    \n[169] J     J     J     J     J     J    \nLevels: Other I J\n\n\n\n\n\nfct_lump_n(f, n = 2)\nOutput\n\n[1] A     C     A     Other &lt;NA&gt;  A     C    \nLevels: A C Other\n\n\n\n\n\n\n\n\nn &lt;- min(ceiling(0.2 * length(f0)), length(f0))\nlevels(f0)[lvls %in% setdiff(lvls, lvls_order[1:n])] &lt;- \"Other\"\nf0\nOutput\n\n  [1] A B B B C C C C C D D D D D D D D D D D D D D D D E E E E E E E E E E E E\n [38] E E E E E E F F F F F F F F F F F F F F F F F F F F G G G G G G G G G G G\n [75] G G G G G G G G G G G G H H H H H H H H H H H H H H H H H H H H H H H H H\n[112] H H I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I J J J J J\n[149] J J J J J J J J J J J J J J J J J J J J J J J J J J\nLevels: A B C D E F G H I J\n\n\n\n\n\nfct_lump_prop(f0, prop = 0.2)\nOutput\n\n  [1] Other Other Other Other Other Other Other Other Other Other Other Other\n [13] Other Other Other Other Other Other Other Other Other Other Other Other\n [25] Other Other Other Other Other Other Other Other Other Other Other Other\n [37] Other Other Other Other Other Other Other Other Other Other Other Other\n [49] Other Other Other Other Other Other Other Other Other Other Other Other\n [61] Other Other Other Other Other Other Other Other Other Other Other Other\n [73] Other Other Other Other Other Other Other Other Other Other Other Other\n [85] Other Other Other Other Other Other Other Other Other Other Other Other\n [97] Other Other Other Other Other Other Other Other Other Other Other Other\n[109] Other Other Other Other Other Other Other Other Other Other Other Other\n[121] Other Other Other Other Other Other Other Other Other Other Other Other\n[133] Other Other Other Other Other Other Other Other Other Other Other Other\n[145] Other Other Other Other Other Other Other Other Other Other Other Other\n[157] Other Other Other Other Other Other Other Other Other Other Other Other\n[169] Other Other Other Other Other Other\nLevels: Other\n\n\n\n\n\n\n\n\nlevels(f0)[lvls %in% names(tt[tt &lt; 2])] &lt;- \"Other\"\nf0\nOutput\n\n  [1] Other B     B     B     C     C     C     C     C     D     D     D    \n [13] D     D     D     D     D     D     D     D     D     D     D     D    \n [25] D     E     E     E     E     E     E     E     E     E     E     E    \n [37] E     E     E     E     E     E     E     F     F     F     F     F    \n [49] F     F     F     F     F     F     F     F     F     F     F     F    \n [61] F     F     F     G     G     G     G     G     G     G     G     G    \n [73] G     G     G     G     G     G     G     G     G     G     G     G    \n [85] G     G     H     H     H     H     H     H     H     H     H     H    \n [97] H     H     H     H     H     H     H     H     H     H     H     H    \n[109] H     H     H     H     H     I     I     I     I     I     I     I    \n[121] I     I     I     I     I     I     I     I     I     I     I     I    \n[133] I     I     I     I     I     I     I     I     I     I     I     J    \n[145] J     J     J     J     J     J     J     J     J     J     J     J    \n[157] J     J     J     J     J     J     J     J     J     J     J     J    \n[169] J     J     J     J     J     J    \nLevels: Other B C D E F G H I J\n\n\n\n\n\nfct_lump_min(f0, min = 2)\nOutput\n\n  [1] Other B     B     B     C     C     C     C     C     D     D     D    \n [13] D     D     D     D     D     D     D     D     D     D     D     D    \n [25] D     E     E     E     E     E     E     E     E     E     E     E    \n [37] E     E     E     E     E     E     E     F     F     F     F     F    \n [49] F     F     F     F     F     F     F     F     F     F     F     F    \n [61] F     F     F     G     G     G     G     G     G     G     G     G    \n [73] G     G     G     G     G     G     G     G     G     G     G     G    \n [85] G     G     H     H     H     H     H     H     H     H     H     H    \n [97] H     H     H     H     H     H     H     H     H     H     H     H    \n[109] H     H     H     H     H     I     I     I     I     I     I     I    \n[121] I     I     I     I     I     I     I     I     I     I     I     I    \n[133] I     I     I     I     I     I     I     I     I     I     I     J    \n[145] J     J     J     J     J     J     J     J     J     J     J     J    \n[157] J     J     J     J     J     J     J     J     J     J     J     J    \n[169] J     J     J     J     J     J    \nLevels: B C D E F G H I J Other\n\n\n\n\n\n\n\n\nbottom_lvls &lt;- seq(which.min(cumsum(tt)[-length(tt)] - tt[-1]))\nlevels(f0)[lvls %in% names(tt[bottom_lvls])] &lt;- \"Other\"\nf0\nOutput\n\n  [1] Other Other Other Other Other Other Other Other Other D     D     D    \n [13] D     D     D     D     D     D     D     D     D     D     D     D    \n [25] D     E     E     E     E     E     E     E     E     E     E     E    \n [37] E     E     E     E     E     E     E     F     F     F     F     F    \n [49] F     F     F     F     F     F     F     F     F     F     F     F    \n [61] F     F     F     G     G     G     G     G     G     G     G     G    \n [73] G     G     G     G     G     G     G     G     G     G     G     G    \n [85] G     G     H     H     H     H     H     H     H     H     H     H    \n [97] H     H     H     H     H     H     H     H     H     H     H     H    \n[109] H     H     H     H     H     I     I     I     I     I     I     I    \n[121] I     I     I     I     I     I     I     I     I     I     I     I    \n[133] I     I     I     I     I     I     I     I     I     I     I     J    \n[145] J     J     J     J     J     J     J     J     J     J     J     J    \n[157] J     J     J     J     J     J     J     J     J     J     J     J    \n[169] J     J     J     J     J     J    \nLevels: Other D E F G H I J\n\n\n\n\n\nfct_lump_lowfreq(f0)\nOutput\n\n  [1] Other Other Other Other Other Other Other Other Other D     D     D    \n [13] D     D     D     D     D     D     D     D     D     D     D     D    \n [25] D     E     E     E     E     E     E     E     E     E     E     E    \n [37] E     E     E     E     E     E     E     F     F     F     F     F    \n [49] F     F     F     F     F     F     F     F     F     F     F     F    \n [61] F     F     F     G     G     G     G     G     G     G     G     G    \n [73] G     G     G     G     G     G     G     G     G     G     G     G    \n [85] G     G     H     H     H     H     H     H     H     H     H     H    \n [97] H     H     H     H     H     H     H     H     H     H     H     H    \n[109] H     H     H     H     H     I     I     I     I     I     I     I    \n[121] I     I     I     I     I     I     I     I     I     I     I     I    \n[133] I     I     I     I     I     I     I     I     I     I     I     J    \n[145] J     J     J     J     J     J     J     J     J     J     J     J    \n[157] J     J     J     J     J     J     J     J     J     J     J     J    \n[169] J     J     J     J     J     J    \nLevels: D E F G H I J Other"
  },
  {
    "objectID": "data-wrangling/base-vs-tidyverse/index.html#match-levels",
    "href": "data-wrangling/base-vs-tidyverse/index.html#match-levels",
    "title": "Base R and Tidyverse syntax comparison for data wrangling",
    "section": "4.12 Match levels",
    "text": "4.12 Match levels\n\n\n\nif(\"A\" %in% levels(f)) {\n  f %in% \"A\"\n}\nOutput\n\n[1]  TRUE FALSE  TRUE FALSE FALSE  TRUE FALSE\n\n\n\n\n\nfct_match(f, \"A\")\nOutput\n\n[1]  TRUE FALSE  TRUE FALSE FALSE  TRUE FALSE"
  },
  {
    "objectID": "data-wrangling/base-vs-tidyverse/index.html#recode-levels",
    "href": "data-wrangling/base-vs-tidyverse/index.html#recode-levels",
    "title": "Base R and Tidyverse syntax comparison for data wrangling",
    "section": "4.13 Recode levels",
    "text": "4.13 Recode levels\n\n\n\nfactor(sapply(f, \\(x) {\n  x &lt;- as.character(x)\n  switch(x, \n         A = \"apple\", \n         B = \"banana\",\n         x)\n  }))\nOutput\n\n[1] apple  C      apple  banana &lt;NA&gt;   apple  C     \nLevels: apple banana C\n\n\n\n\n\nfct_recode(f, \n           apple = \"A\", \n           banana = \"B\")\nOutput\n\n[1] apple  C      apple  banana &lt;NA&gt;   apple  C     \nLevels: apple banana C"
  },
  {
    "objectID": "data-wrangling/base-vs-tidyverse/index.html#relabel-levels",
    "href": "data-wrangling/base-vs-tidyverse/index.html#relabel-levels",
    "title": "Base R and Tidyverse syntax comparison for data wrangling",
    "section": "4.14 Relabel levels",
    "text": "4.14 Relabel levels\n\n\n\nlevels(f) &lt;- paste0(levels(f), \"1\")\nf\nOutput\n\n[1] A1   C1   A1   B1   &lt;NA&gt; A1   C1  \nLevels: A1 B1 C1\n\n\n\n\n\nfct_relabel(f, ~str_c(., \"1\"))\nOutput\n\n[1] A1   C1   A1   B1   &lt;NA&gt; A1   C1  \nLevels: A1 B1 C1"
  },
  {
    "objectID": "data-wrangling/base-vs-tidyverse/index.html#relevel",
    "href": "data-wrangling/base-vs-tidyverse/index.html#relevel",
    "title": "Base R and Tidyverse syntax comparison for data wrangling",
    "section": "4.15 Relevel",
    "text": "4.15 Relevel\n\n\n\nrelevel(f, ref = \"B\")\nOutput\n\n[1] A    C    A    B    &lt;NA&gt; A    C   \nLevels: B A C\n\n\n\n\n\nfct_relevel(f, \"B\")\nOutput\n\n[1] A    C    A    B    &lt;NA&gt; A    C   \nLevels: B A C"
  },
  {
    "objectID": "data-wrangling/base-vs-tidyverse/index.html#reorder",
    "href": "data-wrangling/base-vs-tidyverse/index.html#reorder",
    "title": "Base R and Tidyverse syntax comparison for data wrangling",
    "section": "4.16 Reorder",
    "text": "4.16 Reorder\n\n\n\nreorder(f, x1, mean)\nOutput\n\n[1] A    C    A    B    &lt;NA&gt; A    C   \nattr(,\"scores\")\n        A         B         C \n0.5789172 0.9082078 0.6583996 \nLevels: A C B\n\n\n\n\n\nfct_reorder(f, x1, mean)\nOutput\n\n[1] A    C    A    B    &lt;NA&gt; A    C   \nLevels: A C B\n\n\n\n\n\n\n\n\nreorder(f, seq_along(f), \n        \\(i) sum(x1[i] * x2[i]))\nOutput\n\n[1] A    C    A    B    &lt;NA&gt; A    C   \nattr(,\"scores\")\n        A         B         C \n0.8280563 0.1870677 0.5969617 \nLevels: B C A\n\n\n\n\n\nfct_reorder2(f, x1, x2, \n             \\(x, y) sum(x * y))\nOutput\n\n[1] A    C    A    B    &lt;NA&gt; A    C   \nLevels: A C B"
  },
  {
    "objectID": "data-wrangling/base-vs-tidyverse/index.html#unique",
    "href": "data-wrangling/base-vs-tidyverse/index.html#unique",
    "title": "Base R and Tidyverse syntax comparison for data wrangling",
    "section": "4.17 Unique",
    "text": "4.17 Unique\n\n\n\nunique(f)\nOutput\n\n[1] A    C    B    &lt;NA&gt;\nLevels: A B C\n\n\n\n\n\nfct_unique(f)\nOutput\n\n[1] A    B    C    &lt;NA&gt;\nLevels: A B C"
  },
  {
    "objectID": "data-wrangling/base-vs-tidyverse/index.html#reverse-order-of-levels",
    "href": "data-wrangling/base-vs-tidyverse/index.html#reverse-order-of-levels",
    "title": "Base R and Tidyverse syntax comparison for data wrangling",
    "section": "4.18 Reverse order of levels",
    "text": "4.18 Reverse order of levels\n\n\n\nfactor(f, levels = rev(levels(f)))\nOutput\n\n[1] A    C    A    B    &lt;NA&gt; A    C   \nLevels: C B A\n\n\n\n\n\nfct_rev(f)\nOutput\n\n[1] A    C    A    B    &lt;NA&gt; A    C   \nLevels: C B A"
  },
  {
    "objectID": "data-wrangling/base-vs-tidyverse/index.html#shift-order-of-labels",
    "href": "data-wrangling/base-vs-tidyverse/index.html#shift-order-of-labels",
    "title": "Base R and Tidyverse syntax comparison for data wrangling",
    "section": "4.19 Shift order of labels",
    "text": "4.19 Shift order of labels\n\n\n\nfactor(f, c(levels(f)[-1], levels(f)[1]))\nOutput\n\n[1] A    C    A    B    &lt;NA&gt; A    C   \nLevels: B C A\n\n\n\n\n\nfct_shift(f)\nOutput\n\n[1] A    C    A    B    &lt;NA&gt; A    C   \nLevels: B C A"
  },
  {
    "objectID": "data-wrangling/base-vs-tidyverse/index.html#shuffle-order-of-labels",
    "href": "data-wrangling/base-vs-tidyverse/index.html#shuffle-order-of-labels",
    "title": "Base R and Tidyverse syntax comparison for data wrangling",
    "section": "4.20 Shuffle order of labels",
    "text": "4.20 Shuffle order of labels\n\n\n\nfactor(f, sample(levels(f)))\nOutput\n\n[1] A    C    A    B    &lt;NA&gt; A    C   \nLevels: A C B\n\n\n\n\n\nfct_shuffle(f)\nOutput\n\n[1] A    C    A    B    &lt;NA&gt; A    C   \nLevels: A C B"
  },
  {
    "objectID": "data-wrangling/base-vs-tidyverse/index.html#unify-labels-across-list",
    "href": "data-wrangling/base-vs-tidyverse/index.html#unify-labels-across-list",
    "title": "Base R and Tidyverse syntax comparison for data wrangling",
    "section": "4.21 Unify labels across list",
    "text": "4.21 Unify labels across list\n\n\n\nlapply(list(f1, f2), \n       \\(x) factor(x, c(levels(f1), levels(f2))))\nOutput\n\n[[1]]\n[1] C D D C E E\nLevels: C D E 009 1 101 12\n\n[[2]]\n[1] 1   101 009 009 12  12 \nLevels: C D E 009 1 101 12\n\n\n\n\n\nfct_unify(list(f1, f2))\nOutput\n\n[[1]]\n[1] C D D C E E\nLevels: C D E 009 1 101 12\n\n[[2]]\n[1] 1   101 009 009 12  12 \nLevels: C D E 009 1 101 12"
  },
  {
    "objectID": "data-wrangling/base-vs-tidyverse/index.html#get-todays-date",
    "href": "data-wrangling/base-vs-tidyverse/index.html#get-todays-date",
    "title": "Base R and Tidyverse syntax comparison for data wrangling",
    "section": "5.1 Get today’s date",
    "text": "5.1 Get today’s date\n\n\n\nSys.Date()\nOutput\n\n[1] \"2025-01-12\"\n\n\n\n\n\ntoday()\nOutput\n\n[1] \"2025-01-12\""
  },
  {
    "objectID": "data-wrangling/base-vs-tidyverse/index.html#get-current-date-and-time",
    "href": "data-wrangling/base-vs-tidyverse/index.html#get-current-date-and-time",
    "title": "Base R and Tidyverse syntax comparison for data wrangling",
    "section": "5.2 Get current date and time",
    "text": "5.2 Get current date and time\n\n\n\nSys.time()\nOutput\n\n[1] \"2025-01-12 21:27:16 AEDT\"\n\n\n\n\n\nnow()\nOutput\n\n[1] \"2025-01-12 21:27:16 AEDT\""
  },
  {
    "objectID": "data-wrangling/base-vs-tidyverse/index.html#change-input-to-date",
    "href": "data-wrangling/base-vs-tidyverse/index.html#change-input-to-date",
    "title": "Base R and Tidyverse syntax comparison for data wrangling",
    "section": "5.3 Change input to date",
    "text": "5.3 Change input to date\n\n\n\nas.Date(\"2025-01-01\")\nOutput\n\n[1] \"2025-01-01\"\n\n\n\n\n\nas_date(\"2025-01-01\")\nOutput\n\n[1] \"2025-01-01\"\n\n\n\n\n\n\n\n\nas.Date(\"2025 Jan 1\", format = \"%Y %b %d\")\nOutput\n\n[1] \"2025-01-01\"\n\n\nas.Date(\"1/3/2025\", format = \"%m/%d/%Y\")\nOutput\n\n[1] \"2025-01-03\"\n\n\nas.Date(\"1-3-2025\", format = \"%d-%m-%Y\")\nOutput\n\n[1] \"2025-03-01\"\n\n\n\n\n\nymd(\"2025 Jan 1\")\nOutput\n\n[1] \"2025-01-01\"\n\n\nmdy(\"1/3/2025\")\nOutput\n\n[1] \"2025-01-03\"\n\n\ndmy(\"1-3-2025\")\nOutput\n\n[1] \"2025-03-01\""
  },
  {
    "objectID": "data-wrangling/base-vs-tidyverse/index.html#change-input-to-date-and-time",
    "href": "data-wrangling/base-vs-tidyverse/index.html#change-input-to-date-and-time",
    "title": "Base R and Tidyverse syntax comparison for data wrangling",
    "section": "5.4 Change input to date and time",
    "text": "5.4 Change input to date and time\n\n\n\nas.POSIXct(\"2025-01-01 05:00:00\", tz = \"UTC\")\nOutput\n\n[1] \"2025-01-01 05:00:00 UTC\"\n\n\nas.POSIXlt(\"2025-01-01 05:00:00\", tz = \"UTC\")\nOutput\n\n[1] \"2025-01-01 05:00:00 UTC\"\n\n\n\n\n\nas_datetime(\"2025-01-01 05:00:00\")\nOutput\n\n[1] \"2025-01-01 05:00:00 UTC\""
  },
  {
    "objectID": "data-wrangling/base-vs-tidyverse/index.html#extract-year-month-day-hour-minutes-or-seconds",
    "href": "data-wrangling/base-vs-tidyverse/index.html#extract-year-month-day-hour-minutes-or-seconds",
    "title": "Base R and Tidyverse syntax comparison for data wrangling",
    "section": "5.5 Extract year, month, day, hour, minutes or seconds",
    "text": "5.5 Extract year, month, day, hour, minutes or seconds\n\nd &lt;- as.POSIXct(\"2025/01/03 01:20:40\")\n\n\n\n\nas.numeric(format(d, \"%Y\"))\nOutput\n\n[1] 2025\n\n\n\n\n\nyear(d)\nOutput\n\n[1] 2025\n\n\n\n\n\n\n\n\nas.numeric(format(d, \"%m\"))\nOutput\n\n[1] 1\n\n\n\n\n\nmonth(d)\nOutput\n\n[1] 1\n\n\n\n\n\n\n\n\nas.numeric(format(d, \"%d\"))\nOutput\n\n[1] 3\n\n\n\n\n\nday(d)\nOutput\n\n[1] 3\n\n\n\n\n\n\n\n\nas.numeric(format(d, \"%H\"))\nOutput\n\n[1] 1\n\n\n\n\n\nhour(d)\nOutput\n\n[1] 1\n\n\n\n\n\n\n\n\nas.numeric(format(d, \"%M\"))\nOutput\n\n[1] 20\n\n\n\n\n\nminutes(d)\nOutput\n\n[1] \"1735827640M 0S\"\n\n\n\n\n\n\n\n\nas.numeric(format(d, \"%S\"))\nOutput\n\n[1] 40\n\n\n\n\n\nseconds(d)\nOutput\n\n[1] \"1735827640S\""
  },
  {
    "objectID": "data-wrangling/base-vs-tidyverse/index.html#a-single-list",
    "href": "data-wrangling/base-vs-tidyverse/index.html#a-single-list",
    "title": "Base R and Tidyverse syntax comparison for data wrangling",
    "section": "6.1 A single list",
    "text": "6.1 A single list\n\n6.1.1 Return as list\n\n\n\nlapply(x, sum)\nOutput\n\n[[1]]\n[1] 6\n\n[[2]]\n[1] 14\n\n[[3]]\n[1] 5\n\n\n\n\n\nmap(x, sum)\nOutput\n\n[[1]]\n[1] 6\n\n[[2]]\n[1] 14\n\n[[3]]\n[1] 5\n\n\n\n\n\n\n\n6.1.2 Return as vector\n\n\n\nvapply(x, length, integer(1))\nOutput\n\n[1] 3 4 5\n\n\n\n\n\nmap_int(x, length)\nOutput\n\n[1] 3 4 5\n\n\n\n\n\n\n\n\nvapply(x, sum, double(1))\nOutput\n\n[1]  6 14  5\n\n\n\n\n\nmap_dbl(x, sum)\nOutput\n\n[1]  6 14  5\n\n\n\n\n\n\n\n\nvapply(x, is.numeric, logical(1))\nOutput\n\n[1] TRUE TRUE TRUE\n\n\n\n\n\nmap_lgl(x, is.numeric)\nOutput\n\n[1] TRUE TRUE TRUE\n\n\n\n\n\n\n\n\nvapply(x, \\(x) letters[length(x)], character(1))\nOutput\n\n[1] \"c\" \"d\" \"e\"\n\n\n\n\n\nmap_chr(x, ~letters[length(.x)])\nOutput\n\n[1] \"c\" \"d\" \"e\""
  },
  {
    "objectID": "data-wrangling/base-vs-tidyverse/index.html#two-lists",
    "href": "data-wrangling/base-vs-tidyverse/index.html#two-lists",
    "title": "Base R and Tidyverse syntax comparison for data wrangling",
    "section": "6.2 Two lists",
    "text": "6.2 Two lists\n\n\n\nlapply(seq_along(x), \n       \\(i) paste0(y[[i]], sum(x[[i]])))\nOutput\n\n[[1]]\n[1] \"a6\"\n\n[[2]]\n[1] \"b14\"\n\n[[3]]\n[1] \"c5\"\n\n\n\n\n\nmap2(x, y, ~paste0(.y, sum(.x)))\nOutput\n\n[[1]]\n[1] \"a6\"\n\n[[2]]\n[1] \"b14\"\n\n[[3]]\n[1] \"c5\""
  },
  {
    "objectID": "data-wrangling/base-vs-tidyverse/index.html#multiple-lists",
    "href": "data-wrangling/base-vs-tidyverse/index.html#multiple-lists",
    "title": "Base R and Tidyverse syntax comparison for data wrangling",
    "section": "6.3 Multiple lists",
    "text": "6.3 Multiple lists\n\n\n\nlapply(seq_along(x), \n       \\(i) paste0(sum(x[[i]]), y[[i]], z[[i]]))\nOutput\n\n[[1]]\n[1] \"6a1\"\n\n[[2]]\n[1] \"14b2\"\n\n[[3]]\n[1] \"5c3\"\n\n\n\n\n\npmap(list(x, y, z), \n     ~paste0(sum(..1), ..2, ..3))\nOutput\n\n[[1]]\n[1] \"6a1\"\n\n[[2]]\n[1] \"14b2\"\n\n[[3]]\n[1] \"5c3\""
  },
  {
    "objectID": "data-wrangling/base-vs-tidyverse/index.html#footnotes",
    "href": "data-wrangling/base-vs-tidyverse/index.html#footnotes",
    "title": "Base R and Tidyverse syntax comparison for data wrangling",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nIn practice, the data is just reset if it was modified.↩︎"
  }
]